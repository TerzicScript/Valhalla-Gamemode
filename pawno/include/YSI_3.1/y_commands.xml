<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="file:///C|/Users/bloop/Desktop/Brzi Pawno/xml/pawndoc.xsl" type="text/xsl"?>
<doc source="C:\Users\bloop\Desktop\Brzi Pawno\include\YSI_3.1\y_commands.inc">
	<assembly>
		<name>y_commands.inc</name>
	</assembly>
	<members>

		<!-- enumerations -->
		<member name="T:ALS" value="62">
			<tagname value="ALS"/>
			<member name="C:ALS_OnScriptInit" value="0">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnScriptExit" value="1">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnGameModeInit" value="2">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnGameModeExit" value="3">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnFilterScriptInit" value="4">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnFilterScriptExit" value="5">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerConnect" value="6">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerDisconnect" value="7">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSpawn" value="8">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerDeath" value="9">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleSpawn" value="10">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleDeath" value="11">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerText" value="12">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerCommandText" value="13">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerRequestClass" value="14">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterVehicle" value="15">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerExitVehicle" value="16">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerStateChange" value="17">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterCheckpoint" value="18">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveCheckpoint" value="19">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterRaceCheckpoint" value="20">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveRaceCheckpoint" value="21">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnRconCommand" value="22">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerRequestSpawn" value="23">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnObjectMoved" value="24">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerObjectMoved" value="25">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerPickUpPickup" value="26">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleMod" value="27">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnEnterExitModShop" value="28">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehiclePaintjob" value="29">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleRespray" value="30">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleDamageStatusUpdate" value="31">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSelectedMenuRow" value="32">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerExitedMenu" value="33">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerInteriorChange" value="34">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerKeyStateChange" value="35">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnRconLoginAttempt" value="36">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerUpdate" value="37">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerStreamIn" value="38">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerStreamOut" value="39">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleStreamIn" value="40">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleStreamOut" value="41">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnDialogResponse" value="42">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickPlayer" value="43">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLogin" value="44">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLogout" value="45">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerTakeDamage" value="46">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerGiveDamage" value="47">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickMap" value="48">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerCommandReceived" value="49">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerCommandPerformed" value="50">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnUnoccupiedVehicleUpdate" value="51">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickTextDraw" value="52">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickPlayerTextDraw" value="53">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEditObject" value="54">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEditAttachedObject" value="55">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterArea" value="56">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveArea" value="57">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerFinishRace" value="58">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerExitRace" value="59">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnRaceEnd" value="60">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSelectObject" value="61">
				<tagname value="Bit"/>
			</member>
		</member>
		<member name="T:E_BINTREE_INPUT" value="2">
			<tagname value="E_BINTREE_INPUT"/>
			<member name="C:E_BINTREE_INPUT_VALUE" value="0">
			</member>
			<member name="C:E_BINTREE_INPUT_POINTER" value="1">
			</member>
			<referrer name="Command_Generate"/>
		</member>
		<member name="T:E_BINTREE_TREE" value="5">
			<tagname value="E_BINTREE_TREE"/>
			<member name="C:E_BINTREE_TREE_VALUE" value="0">
			</member>
			<member name="C:E_BINTREE_TREE_LEFT" value="1">
			</member>
			<member name="C:E_BINTREE_TREE_RIGHT" value="2">
			</member>
			<member name="C:E_BINTREE_TREE_PARENT" value="3">
			</member>
			<member name="C:E_BINTREE_TREE_POINTER" value="4">
			</member>
		</member>
		<member name="T:E_COMMANDS" value="43">
			<tagname value="E_COMMANDS"/>
			<member name="C:E_COMMANDS_FUNCTION" value="0">
				<size value="8"/>
			</member>
			<member name="C:E_COMMANDS_PLAYERS" value="8">
				<tagname value="Bit"/>
				<size value="33"/>
			</member>
			<member name="C:E_COMMANDS_MASTERS" value="41">
			</member>
			<member name="C:E_COMMANDS_FUNC_POINTER" value="42">
			</member>
		</member>
		<member name="T:E_GROUP_DATA" value="8">
			<tagname value="E_GROUP_DATA"/>
			<member name="C:E_GROUP_DATA_NAME" value="0">
				<size value="6"/>
			</member>
			<member name="C:E_GROUP_DATA_HASH" value="6">
			</member>
			<member name="C:E_GROUP_DATA_FLAGS" value="7">
				<tagname value="e_GROUP_FLAGS"/>
			</member>
		</member>

		<!-- constants -->
		<member name="C:cellbits" value="32">
			<referrer name="Bit_Set"/>
			<referrer name="Bits@YSII_Ag"/>
			<referrer name="Blanks@YSII_Ag"/>
			<referrer name="PA_Set"/>
			<referrer name="PA@YSII_Ag"/>
			<referrer name="Master_OnScriptInit"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="@yH_PlayerConnect92"/>
			<referrer name="_Group_InitPlayer"/>
			<referrer name="_Group_SetSome"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="_Group_SetPlayer"/>
			<referrer name="Group_SetBalancedInternal"/>
			<referrer name="Group_GetPlayer"/>
			<referrer name="_Group_Create"/>
			<referrer name="_Group_Destroy"/>
			<referrer name="Group_SetGroup"/>
			<referrer name="Group_GetGroup"/>
			<referrer name="@yH_PlayerConnect3"/>
			<referrer name="Command_GetPlayer"/>
			<referrer name="Command_Process"/>
			<referrer name="Command_GetDisplay"/>
			<referrer name="Command_GetDisplayNamed"/>
			<referrer name="Command_GetPlayerCommandCount"/>
			<referrer name="Command_GetNext"/>
		</member>
		<member name="C:cellmax" value="2147483647">
			<referrer name="operator!(Float:)"/>
			<referrer name="Group_SetBalancedInternal"/>
		</member>
		<member name="C:cellmin" value="-2147483648">
			<referrer name="operator-(Float:)"/>
		</member>
		<member name="C:false" value="0">
			<tagname value="bool"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="boolstr"/>
			<referrer name="Hooks_FindAll"/>
			<referrer name="_Master_Get"/>
			<referrer name="S@@_OnPlayerDisconnect"/>
			<referrer name="Group_GetPlayer"/>
			<referrer name="Group_GetGang"/>
			<referrer name="Command_GetPlayer"/>
		</member>
		<member name="C:true" value="1">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="boolstr"/>
			<referrer name="_Master_Get"/>
			<referrer name="Group_SetBalancedInternal"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
		</member>

		<!-- variables -->
		<member name="F:AMX_BASE_ADDRESS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobal"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
		</member>
		<member name="F:AMX_HEADER_AMX_VERSION">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_CIP">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_COD">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobal"/>
			<referrer name="AMX_TraceCode"/>
		</member>
		<member name="F:AMX_HEADER_DAT">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_TraceMemory"/>
		</member>
		<member name="F:AMX_HEADER_DEFSIZE">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_FILE_VERSION">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_FLAGS">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_HEA">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_TraceMemory"/>
		</member>
		<member name="F:AMX_HEADER_LIBRARIES">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_MAGIC">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_NAMETABLE">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_NATIVES">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_PUBLICS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="Hooks_AddOne"/>
		</member>
		<member name="F:AMX_HEADER_PUBVARS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_SIZE">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_STP">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_TAGS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_REAL_ADDRESS">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_REAL_DATA">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobalAddress"/>
		</member>
		<member name="F:Bot@YSII_Ag">
			<referrer name="S@@_OnPlayerConnect"/>
			<referrer name="S@@_OnFilterScriptInit"/>
			<referrer name="S@@_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
		</member>
		<member name="F:Bot@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="S@@_OnPlayerConnect"/>
			<referrer name="S@@_OnFilterScriptInit"/>
			<referrer name="S@@_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
		</member>
		<member name="F:Character@YSII_Ag">
			<referrer name="S@@_OnPlayerConnect"/>
			<referrer name="S@@_OnFilterScriptInit"/>
			<referrer name="S@@_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
		</member>
		<member name="F:Character@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="S@@_OnPlayerConnect"/>
			<referrer name="S@@_OnFilterScriptInit"/>
			<referrer name="S@@_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
		</member>
		<member name="F:FALSE">
			<tagname value="bool"/>
		</member>
		<member name="F:GroupPlayers@YSII_Ag">
			<referrer name="Master_OnScriptInit"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="_Group_SetPlayer"/>
			<referrer name="Group_Destroy"/>
			<referrer name="Group@YSII_Ag"/>
			<referrer name="Group_SetGroup"/>
		</member>
		<member name="F:GroupPlayers@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="_Group_SetPlayer"/>
			<referrer name="Group_SetBalancedInternal"/>
			<referrer name="Group_GetCount"/>
			<referrer name="Group_Destroy"/>
		</member>
		<member name="F:I@">
			<referrer name="_Group_AddInternal"/>
			<referrer name="__Group_AddInternal_"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="@yH_PlayerConnect92"/>
			<referrer name="_Group_InitPlayer"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="_Group_FakePlayer_"/>
			<referrer name="_Group_SetPlayer_"/>
			<referrer name="_Group_Create"/>
			<referrer name="_Group_CreateChain_"/>
			<referrer name="Group_Destroy"/>
			<referrer name="_Group_Destroy_"/>
			<referrer name="Group_SetGroup"/>
		</member>
		<member name="F:J@">
			<referrer name="_Group_AddInternal"/>
			<referrer name="__Group_AddInternal_"/>
			<referrer name="__Group_AddInternal"/>
			<referrer name="Master_OnScriptInit"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="@yH_PlayerConnect92"/>
			<referrer name="_Group_InitPlayer"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="_Group_FakePlayer_"/>
			<referrer name="_Group_SetPlayer_"/>
			<referrer name="_Group_SetPlayer"/>
			<referrer name="_Group_Create"/>
			<referrer name="_Group_CreateChain_"/>
			<referrer name="_Group_CreateChain"/>
			<referrer name="Group_Destroy"/>
			<referrer name="_Group_Destroy_"/>
			<referrer name="_Group_Destroy"/>
			<referrer name="Group_SetGroup"/>
		</member>
		<member name="F:NULL">
			<referrer name="Group_Create"/>
			<referrer name="Command_Process"/>
		</member>
		<member name="F:Player@YSII_Ag">
			<referrer name="S@@_OnPlayerConnect"/>
			<referrer name="S@@_OnFilterScriptInit"/>
			<referrer name="S@@_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
		</member>
		<member name="F:Player@YSII_Cg">
			<tagname value="_Y_ITER_C3"/>
			<referrer name="S@@_OnPlayerConnect"/>
			<referrer name="S@@_OnFilterScriptInit"/>
			<referrer name="S@@_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
		</member>
		<member name="F:Q@">
			<referrer name="S@"/>
			<referrer name="G@"/>
			<referrer name="F@"/>
		</member>
		<member name="F:RG@">
			<tagname value="Bit"/>
		</member>
		<member name="F:THE_CURRENT_MASTER_IS_CLOUD">
		</member>
		<member name="F:THE_CURRENT_MASTER_IS_CLOUD">
		</member>
		<member name="F:THE_CURRENT_MASTER_IS_CLOUD">
		</member>
		<member name="F:THE_CURRENT_MASTER_IS_CLOUD">
		</member>
		<member name="F:THE_CURRENT_MASTER_IS_CLOUD">
		</member>
		<member name="F:TRUE">
			<tagname value="bool"/>
			<referrer name="Bintree_Delete"/>
		</member>
		<member name="F:YSI_FILTERSCRIPT">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
			<referrer name="YVers_OnScriptInit"/>
		</member>
		<member name="F:YSI_gGroupData">
			<referrer name="_Group_AddInternal"/>
			<referrer name="Group_IsValid"/>
			<referrer name="Master_OnScriptInit"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="Group_SetBalancedInternal"/>
			<referrer name="Group_GetPlayer"/>
			<referrer name="Group_SetName"/>
			<referrer name="Group_GetName"/>
			<referrer name="Group_GetID"/>
			<referrer name="Group_SetGang"/>
			<referrer name="Group_GetGang"/>
			<referrer name="Group_SetColour"/>
			<referrer name="Group_GetColour"/>
			<referrer name="Group_GetCount"/>
			<referrer name="_Group_Create"/>
			<referrer name="Group_Destroy"/>
			<referrer name="Group_SetGroup"/>
		</member>
		<member name="F:YSI_gGroupPlayers">
			<tagname value="Bit"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="@yH_PlayerConnect92"/>
			<referrer name="_Group_InitPlayer"/>
			<referrer name="_Group_SetSome"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="_Group_FakePlayer"/>
			<referrer name="_Group_SetPlayer"/>
			<referrer name="Group_SetBalancedInternal"/>
			<referrer name="Group_GetPlayer"/>
			<referrer name="_Group_Destroy"/>
			<referrer name="Group_SetGroup"/>
		</member>
		<member name="F:YSI_gTempGroups">
			<tagname value="Bit"/>
			<referrer name="_Group_SetSome"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="_Group_Destroy"/>
		</member>
		<member name="F:YSI_g_cEmptyGroups">
			<tagname value="Bit"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="_Group_Create"/>
		</member>
		<member name="F:YSI_g_sCallbackAddresses">
			<referrer name="Hooks_AddOne"/>
			<referrer name="AMX_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnFilterScriptExit"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnRconCommand"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnObjectMoved"/>
			<referrer name="OnPlayerObjectMoved"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnPlayerLogin"/>
			<referrer name="OnPlayerLogout"/>
			<referrer name="OnPlayerEnterArea"/>
			<referrer name="OnPlayerLeaveArea"/>
			<referrer name="OnPlayerFinishRace"/>
			<referrer name="OnPlayerExitRace"/>
			<referrer name="OnRaceEnd"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="OnPlayerSelectObject"/>
		</member>
		<member name="F:YSI_g_sCallbackEnd">
			<referrer name="AMX_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnFilterScriptExit"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnRconCommand"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnObjectMoved"/>
			<referrer name="OnPlayerObjectMoved"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnPlayerLogin"/>
			<referrer name="OnPlayerLogout"/>
			<referrer name="OnPlayerEnterArea"/>
			<referrer name="OnPlayerLeaveArea"/>
			<referrer name="OnPlayerFinishRace"/>
			<referrer name="OnPlayerExitRace"/>
			<referrer name="OnRaceEnd"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="OnPlayerSelectObject"/>
		</member>
		<member name="F:YSI_g_sCallbackStart">
			<referrer name="AMX_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="ScriptInit_OnFilterScriptExit"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnRconCommand"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnObjectMoved"/>
			<referrer name="OnPlayerObjectMoved"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnPlayerLogin"/>
			<referrer name="OnPlayerLogout"/>
			<referrer name="OnPlayerEnterArea"/>
			<referrer name="OnPlayerLeaveArea"/>
			<referrer name="OnPlayerFinishRace"/>
			<referrer name="OnPlayerExitRace"/>
			<referrer name="OnRaceEnd"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="OnPlayerSelectObject"/>
		</member>
		<member name="F:YSI_g_sChildGroups">
			<tagname value="Bit"/>
			<referrer name="Master_OnScriptInit"/>
			<referrer name="@yH_PlayerConnect92"/>
			<referrer name="_Group_SetSome"/>
			<referrer name="_Group_Create"/>
			<referrer name="Group_SetGroup"/>
			<referrer name="Group_GetGroup"/>
		</member>
		<member name="F:YSI_g_sCommandCount">
			<referrer name="Command_Generate"/>
			<referrer name="Master_OnScriptClose"/>
			<referrer name="Command_RemoveFromBintree"/>
			<referrer name="Command_Remove"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
		</member>
		<member name="F:YSI_g_sCommandFlags">
			<tagname value="e_COMM_FLAG"/>
			<referrer name="Command_SetDeniedReturn"/>
			<referrer name="Command_SetProvider"/>
			<referrer name="Command_GetProvider"/>
			<referrer name="Command_GetDeniedReturn"/>
			<referrer name="Command_SetIllegalReturn"/>
			<referrer name="Command_GetIllegalReturn"/>
			<referrer name="Command_SetUnknownReturn"/>
			<referrer name="Command_GetUnknownReturn"/>
			<referrer name="Command_SetDisconnectReturn"/>
			<referrer name="Command_GetDisconnectReturn"/>
			<referrer name="Command_SetDeniedDisplay"/>
			<referrer name="Command_GetDeniedDisplay"/>
			<referrer name="Command_Generate"/>
			<referrer name="Command_IncOPCR"/>
			<referrer name="Command_DecOPCR"/>
			<referrer name="Command_IncOPCP"/>
			<referrer name="Command_DecOPCP"/>
			<referrer name="Command_FindFast"/>
			<referrer name="Command_FindFastStrict"/>
			<referrer name="Command_FindSlow"/>
			<referrer name="Command_FindSlowStrict"/>
			<referrer name="Command_Find"/>
			<referrer name="Command_RemoveFromBintree"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<referrer name="@yH_PlayerCommandText3"/>
			<referrer name="Command_Process"/>
		</member>
		<member name="F:YSI_g_sCommandIndex">
			<referrer name="Master_OnScriptClose"/>
			<referrer name="Command_Remove"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
		</member>
		<member name="F:YSI_g_sCommands">
			<referrer name="Command_Generate"/>
			<referrer name="@yH_ScriptInit3"/>
			<referrer name="Master_OnScriptClose"/>
			<referrer name="Command_Touch"/>
			<referrer name="@yH_PlayerConnect3"/>
			<referrer name="Command_FindFast"/>
			<referrer name="Command_FindFastStrict"/>
			<referrer name="Command_FindSlow"/>
			<referrer name="Command_FindSlowStrict"/>
			<referrer name="Command_SetPlayer"/>
			<referrer name="Command_GetPlayer"/>
			<referrer name="Command_RemoveFromBintree"/>
			<referrer name="Command_Remove"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<referrer name="Command_Process"/>
			<referrer name="Command_GetName"/>
			<referrer name="Command_GetDisplay"/>
			<referrer name="Command_GetDisplayNamed"/>
			<referrer name="Command_GetPlayerCommandCount"/>
			<referrer name="Command_GetNext"/>
		</member>
		<member name="F:YSI_g_sGroupCount">
			<referrer name="_Group_Create"/>
		</member>
		<member name="F:YSI_g_sMasterCount">
			<referrer name="S@@_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Get"/>
		</member>
		<member name="F:YSI_g_sMasterData">
			<tagname value="Bit"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="_Group_Create"/>
		</member>
		<member name="F:YSI_g_sMasterData">
			<referrer name="S@@_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Get"/>
		</member>
		<member name="F:YSI_g_sNextAddFunc">
			<referrer name="Master_OnScriptInit"/>
			<referrer name="_Group_CreateChain"/>
		</member>
		<member name="F:YSI_g_sNextInitFunc">
			<referrer name="__Group_AddInternal"/>
			<referrer name="Master_OnScriptInit"/>
		</member>
		<member name="F:YSI_g_sNextUpdFunc">
			<referrer name="Master_OnScriptInit"/>
			<referrer name="_Group_SetPlayer"/>
			<referrer name="_Group_Destroy"/>
		</member>
		<member name="F:YSI_g_sPlayerProvider">
			<referrer name="Command_SetPlayerProvider"/>
			<referrer name="Command_GetPlayerProvider"/>
			<referrer name="@yH_PlayerConnect3"/>
			<referrer name="Command_Process"/>
		</member>
		<member name="F:YSI_g_sSearchTree">
			<tagname value="Bintree"/>
			<referrer name="Command_Generate"/>
			<referrer name="@yH_ScriptInit3"/>
			<referrer name="Command_FindFast"/>
			<referrer name="Command_FindFastStrict"/>
			<referrer name="Command_RemoveFromBintree"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
		</member>
		<member name="F:YSI_g_scGlobalName">
			<referrer name="Master_OnScriptInit"/>
		</member>
		<member name="F:YSI_gsOnGameModeInit">
			<referrer name="S@@_OnGameModeInit"/>
		</member>
		<member name="F:YSI_gsSpecifier@">
			<referrer name="S@@_OnGameModeInit"/>
		</member>
		<member name="F:_@">
			<attribute name="public"/>
			<referrer name="Y@"/>
			<referrer name="S@@_OnScriptInit"/>
			<referrer name="S@@_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Get"/>
			<referrer name="x@"/>
			<referrer name="y@"/>
			<referrer name="__Group_AddInternal@"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="@yH_PlayerConnect92"/>
			<referrer name="_Group_FakePlayer@"/>
			<referrer name="_Group_SetPlayer@"/>
			<referrer name="_Group_Create"/>
			<referrer name="_Group_CreateChain@"/>
			<referrer name="_Group_Destroy@"/>
			<referrer name="@yH_ScriptInit3"/>
		</member>
		<member name="F:_YCM_gx@">
			<tagname value="_E_YCM"/>
			<referrer name="YSIM_OnMasterSystemInit"/>
			<referrer name="x@"/>
		</member>
		<member name="F:_YCM_gy@">
			<tagname value="_E_YCM"/>
			<referrer name="x@OnScriptInit"/>
			<referrer name="y@"/>
			<referrer name="Master_OnScriptInit"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="@yH_PlayerConnect92"/>
			<referrer name="_Group_SetPlayer"/>
		</member>
		<member name="F:__date">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__time">
		</member>

		<!-- functions -->
		<member name="M:operator!(Float:)" syntax="operator!(Float:)(oper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="cellmax"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(_:,Float:)" syntax="operator%(_:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(Float:,_:)" syntax="operator%(Float:,_:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator%(Float:,Float:)" syntax="operator%(Float:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Float:,_:)" syntax="operator!=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator!=(Float:,Float:)" syntax="operator!=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(_:,Float:)" syntax="operator-(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,_:)" syntax="operator-(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator+(Float:,_:)" syntax="operator+(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatadd"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator/(_:,Float:)" syntax="operator/(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,_:)" syntax="operator/(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator*(Float:,_:)" syntax="operator*(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatmul"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator++(Float:)" syntax="operator++(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:)" syntax="operator-(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator--(Float:)" syntax="operator--(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,Float:)" syntax="operator-(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator--(Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(Float:,Float:)" syntax="operator+(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator++(Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,Float:)" syntax="operator==(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,_:)" syntax="operator==(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(Float:,Float:)" syntax="operator&gt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;(Float:,_:)" syntax="operator&gt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(_:,Float:)" syntax="operator&gt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,Float:)" syntax="operator&gt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,_:)" syntax="operator&gt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;=(_:,Float:)" syntax="operator&gt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,Float:)" syntax="operator&lt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,_:)" syntax="operator&lt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;(_:,Float:)" syntax="operator&lt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,Float:)" syntax="operator&lt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,_:)" syntax="operator&lt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;=(_:,Float:)" syntax="operator&lt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:@receivepacket" syntax="@receivepacket(packet[], size, source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="packet">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@receivestring" syntax="@receivestring(message[], source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_PlayerCommandText3" syntax="@yH_PlayerCommandText3(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<automaton name="x@"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Command_Process"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_OPCP"/>
			<dependency name="e_COMM_FLAG_OPCR"/>
			<dependency name="e_COMM_FLAG_UNKNOWN"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_PlayerConnect3" syntax="@yH_PlayerConnect3(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sPlayerProvider"/>
			<dependency name="__InitialiseFromGroups"/>
			<dependency name="cellbits"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_PlayerConnect92" syntax="@yH_PlayerConnect92(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="_@"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_Group_FakePlayer_"/>
			<dependency name="_Group_InitPlayer"/>
			<dependency name="_YCM_gy@"/>
			<dependency name="cellbits"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_PlayerDisconnect2" syntax="@yH_PlayerDisconnect2(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Bits@YSII_Ag"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="GroupPlayers@YSII_Cg"/>
			<dependency name="Itter_RemoveInternal"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_g_cEmptyGroups"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_YCM_gy@"/>
			<dependency name="cellbits"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:@yH_ScriptExit3" syntax="@yH_ScriptExit3()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Command_DecOPCP"/>
			<dependency name="Command_DecOPCR"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:@yH_ScriptInit3" syntax="@yH_ScriptInit3()">
			<attribute name="public"/>
			<stacksize value="40"/>
			<dependency name="AMX_GetNamePrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="Bintree_Reset"/>
			<dependency name="Command_Add"/>
			<dependency name="Command_Generate"/>
			<dependency name="Command_IncOPCP"/>
			<dependency name="Command_IncOPCR"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sSearchTree"/>
			<dependency name="_@"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:AMX_GetBaseCount" syntax="AMX_GetBaseCount(table, &amp;base, &amp;count)">
			<stacksize value="1"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_TABLE_LIBRARIES"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<dependency name="AMX_TABLE_TAGS"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="base">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetEntry" syntax="AMX_GetEntry(table, idx, &amp;buffer, pattern[])">
			<stacksize value="42"/>
			<referrer name="AMX_GetPointer"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="strfind"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetEntryPrefix" syntax="AMX_GetEntryPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetEntrySuffix" syntax="AMX_GetEntrySuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetPointerSuffix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetGlobal" syntax="AMX_GetGlobal()">
			<stacksize value="2"/>
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobal"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
		</member>
		<member name="M:AMX_GetGlobalAddress" syntax="AMX_GetGlobalAddress(...)">
			<stacksize value="2"/>
			<dependency name="AMX_REAL_DATA"/>
			<param name="...">
			</param>
		</member>
		<member name="M:AMX_GetName" syntax="AMX_GetName(table, idx, buffer[], pattern[])">
			<stacksize value="10"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="strfind"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetNamePrefix" syntax="AMX_GetNamePrefix(table, idx, buffer[], pattern)">
			<stacksize value="9"/>
			<referrer name="Hooks_FindAll"/>
			<referrer name="@yH_ScriptInit3"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetNameSuffix" syntax="AMX_GetNameSuffix(table, idx, buffer[], pattern)">
			<stacksize value="10"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetPointer" syntax="AMX_GetPointer(table, idx, &amp;buffer, pattern[])">
			<stacksize value="8"/>
			<referrer name="AMX_GetValue"/>
			<referrer name="Hooks_RedirectPublic"/>
			<dependency name="AMX_GetEntry"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetPointerPrefix" syntax="AMX_GetPointerPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetValuePrefix"/>
			<referrer name="Master_OnScriptInit"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetPointerSuffix" syntax="AMX_GetPointerSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetValueSuffix"/>
			<dependency name="AMX_GetEntrySuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetRelativeAddress" syntax="AMX_GetRelativeAddress(...)">
			<stacksize value="2"/>
			<param name="...">
			</param>
		</member>
		<member name="M:AMX_GetReturnAddress" syntax="AMX_GetReturnAddress()">
			<stacksize value="1"/>
		</member>
		<member name="M:AMX_GetValue" syntax="AMX_GetValue(table, idx, &amp;buffer, pattern[])">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointer"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetValuePrefix" syntax="AMX_GetValuePrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetValueSuffix" syntax="AMX_GetValueSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointerSuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_OnScriptInit" syntax="AMX_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="ALS_OnDialogResponse"/>
			<dependency name="ALS_OnEnterExitModShop"/>
			<dependency name="ALS_OnFilterScriptExit"/>
			<dependency name="ALS_OnFilterScriptInit"/>
			<dependency name="ALS_OnGameModeExit"/>
			<dependency name="ALS_OnGameModeInit"/>
			<dependency name="ALS_OnObjectMoved"/>
			<dependency name="ALS_OnPlayerClickMap"/>
			<dependency name="ALS_OnPlayerClickPlayer"/>
			<dependency name="ALS_OnPlayerClickPlayerTextDraw"/>
			<dependency name="ALS_OnPlayerClickTextDraw"/>
			<dependency name="ALS_OnPlayerCommandText"/>
			<dependency name="ALS_OnPlayerConnect"/>
			<dependency name="ALS_OnPlayerDeath"/>
			<dependency name="ALS_OnPlayerDisconnect"/>
			<dependency name="ALS_OnPlayerEditAttachedObject"/>
			<dependency name="ALS_OnPlayerEditObject"/>
			<dependency name="ALS_OnPlayerEnterArea"/>
			<dependency name="ALS_OnPlayerEnterCheckpoint"/>
			<dependency name="ALS_OnPlayerEnterRaceCheckpoint"/>
			<dependency name="ALS_OnPlayerEnterVehicle"/>
			<dependency name="ALS_OnPlayerExitRace"/>
			<dependency name="ALS_OnPlayerExitVehicle"/>
			<dependency name="ALS_OnPlayerExitedMenu"/>
			<dependency name="ALS_OnPlayerFinishRace"/>
			<dependency name="ALS_OnPlayerGiveDamage"/>
			<dependency name="ALS_OnPlayerInteriorChange"/>
			<dependency name="ALS_OnPlayerKeyStateChange"/>
			<dependency name="ALS_OnPlayerLeaveArea"/>
			<dependency name="ALS_OnPlayerLeaveCheckpoint"/>
			<dependency name="ALS_OnPlayerLeaveRaceCheckpoint"/>
			<dependency name="ALS_OnPlayerLogin"/>
			<dependency name="ALS_OnPlayerLogout"/>
			<dependency name="ALS_OnPlayerObjectMoved"/>
			<dependency name="ALS_OnPlayerPickUpPickup"/>
			<dependency name="ALS_OnPlayerRequestClass"/>
			<dependency name="ALS_OnPlayerRequestSpawn"/>
			<dependency name="ALS_OnPlayerSelectObject"/>
			<dependency name="ALS_OnPlayerSelectedMenuRow"/>
			<dependency name="ALS_OnPlayerSpawn"/>
			<dependency name="ALS_OnPlayerStateChange"/>
			<dependency name="ALS_OnPlayerStreamIn"/>
			<dependency name="ALS_OnPlayerStreamOut"/>
			<dependency name="ALS_OnPlayerTakeDamage"/>
			<dependency name="ALS_OnPlayerText"/>
			<dependency name="ALS_OnPlayerUpdate"/>
			<dependency name="ALS_OnRaceEnd"/>
			<dependency name="ALS_OnRconCommand"/>
			<dependency name="ALS_OnRconLoginAttempt"/>
			<dependency name="ALS_OnScriptExit"/>
			<dependency name="ALS_OnScriptInit"/>
			<dependency name="ALS_OnUnoccupiedVehicleUpdate"/>
			<dependency name="ALS_OnVehicleDamageStatusUpdate"/>
			<dependency name="ALS_OnVehicleDeath"/>
			<dependency name="ALS_OnVehicleMod"/>
			<dependency name="ALS_OnVehiclePaintjob"/>
			<dependency name="ALS_OnVehicleRespray"/>
			<dependency name="ALS_OnVehicleSpawn"/>
			<dependency name="ALS_OnVehicleStreamIn"/>
			<dependency name="ALS_OnVehicleStreamOut"/>
			<dependency name="Hooks_FindAll"/>
			<dependency name="Hooks_RemovePublic"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<dependency name="printf"/>
		</member>
		<member name="M:AMX_Read" syntax="AMX_Read(addr)">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:AMX_ReadArray" syntax="AMX_ReadArray(addr, dest[], len)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_ReadString" syntax="AMX_ReadString(addr, str[], len)">
			<stacksize value="3"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_TraceCode" syntax="AMX_TraceCode(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="4"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_TraceFunc" syntax="AMX_TraceFunc(b0, b1, b2, b3)">
			<stacksize value="1"/>
			<referrer name="_@_y_amx_inc_@_"/>
			<param name="b0">
			</param>
			<param name="b1">
			</param>
			<param name="b2">
			</param>
			<param name="b3">
			</param>
		</member>
		<member name="M:AMX_TraceMemory" syntax="AMX_TraceMemory(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="4"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_HEA"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_Write" syntax="AMX_Write(addr, value)">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
			<param name="addr">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AMX_WriteArray" syntax="AMX_WriteArray(addr, src[], len)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_WriteString" syntax="AMX_WriteString(addr, str[], len)">
			<stacksize value="3"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:Bintree_Add" syntax="Bintree_Add(data[][], pointer, value, offset, maxsize)">
			<stacksize value="9"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<dependency name="Bintree_FindValue"/>
			<dependency name="E_BINTREE_TREE_LEFT"/>
			<dependency name="E_BINTREE_TREE_PARENT"/>
			<dependency name="E_BINTREE_TREE_POINTER"/>
			<dependency name="E_BINTREE_TREE_RIGHT"/>
			<dependency name="E_BINTREE_TREE_VALUE"/>
			<param name="data">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="pointer">
			</param>
			<param name="value">
			</param>
			<param name="offset">
			</param>
			<param name="maxsize">
			</param>
		</member>
		<member name="M:Bintree_Compress" syntax="Bintree_Compress(data[][], index, count)">
			<stacksize value="5"/>
			<referrer name="Bintree_Delete"/>
			<dependency name="E_BINTREE_TREE_LEFT"/>
			<dependency name="E_BINTREE_TREE_PARENT"/>
			<dependency name="E_BINTREE_TREE_POINTER"/>
			<dependency name="E_BINTREE_TREE_RIGHT"/>
			<dependency name="E_BINTREE_TREE_VALUE"/>
			<param name="data">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="count">
			</param>
		</member>
		<member name="M:Bintree_Delete" syntax="Bintree_Delete(source[][], index, count)">
			<stacksize value="8"/>
			<referrer name="Command_RemoveFromBintree"/>
			<dependency name="Bintree_Compress"/>
			<dependency name="Bintree_FindMax"/>
			<dependency name="Bintree_FindMin"/>
			<dependency name="E_BINTREE_TREE_LEFT"/>
			<dependency name="E_BINTREE_TREE_PARENT"/>
			<dependency name="E_BINTREE_TREE_POINTER"/>
			<dependency name="E_BINTREE_TREE_RIGHT"/>
			<dependency name="E_BINTREE_TREE_VALUE"/>
			<dependency name="TRUE"/>
			<param name="source">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="count">
			</param>
		</member>
		<member name="M:Bintree_FindMax" syntax="Bintree_FindMax(data[][], offset)">
			<stacksize value="2"/>
			<referrer name="Bintree_Delete"/>
			<dependency name="E_BINTREE_TREE_RIGHT"/>
			<param name="data">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:Bintree_FindMin" syntax="Bintree_FindMin(data[][], offset)">
			<stacksize value="2"/>
			<referrer name="Bintree_Delete"/>
			<dependency name="E_BINTREE_TREE_LEFT"/>
			<param name="data">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:Bintree_FindValue" syntax="Bintree_FindValue(tree[][], value, &amp;cont, &amp;old)">
			<stacksize value="2"/>
			<referrer name="Bintree_Add"/>
			<referrer name="Command_FindFast"/>
			<referrer name="Command_FindFastStrict"/>
			<referrer name="Command_RemoveFromBintree"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<dependency name="E_BINTREE_TREE_LEFT"/>
			<dependency name="E_BINTREE_TREE_POINTER"/>
			<dependency name="E_BINTREE_TREE_RIGHT"/>
			<dependency name="E_BINTREE_TREE_VALUE"/>
			<param name="tree">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="cont">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="old">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Bintree_Generate" syntax="Bintree_Generate(output[][], input[][], size)">
			<stacksize value="9"/>
			<referrer name="Command_Generate"/>
			<dependency name="Bintree_QSort"/>
			<dependency name="Bintree_SortHalf"/>
			<dependency name="E_BINTREE_TREE_LEFT"/>
			<dependency name="E_BINTREE_TREE_PARENT"/>
			<dependency name="E_BINTREE_TREE_RIGHT"/>
			<param name="output">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="input">
				<paraminfo> [][2] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Bintree_QSort" syntax="Bintree_QSort(numbers[][], left, right)">
			<stacksize value="10"/>
			<referrer name="Bintree_Generate"/>
			<referrer name="Bintree_QSort"/>
			<dependency name="E_BINTREE_INPUT_POINTER"/>
			<dependency name="E_BINTREE_INPUT_VALUE"/>
			<param name="numbers">
				<paraminfo> [][2] </paraminfo>
			</param>
			<param name="left">
			</param>
			<param name="right">
			</param>
		</member>
		<member name="M:Bintree_Reset" syntax="Bintree_Reset(tree[][], pointer)">
			<stacksize value="1"/>
			<referrer name="@yH_ScriptInit3"/>
			<dependency name="E_BINTREE_TREE_LEFT"/>
			<dependency name="E_BINTREE_TREE_PARENT"/>
			<dependency name="E_BINTREE_TREE_POINTER"/>
			<dependency name="E_BINTREE_TREE_RIGHT"/>
			<dependency name="E_BINTREE_TREE_VALUE"/>
			<param name="tree">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="pointer">
			</param>
		</member>
		<member name="M:Bintree_SortHalf" syntax="Bintree_SortHalf(output[][], data[][], index, upper, offset, parent)">
			<stacksize value="13"/>
			<referrer name="Bintree_Generate"/>
			<referrer name="Bintree_SortHalf"/>
			<dependency name="E_BINTREE_INPUT_POINTER"/>
			<dependency name="E_BINTREE_INPUT_VALUE"/>
			<dependency name="E_BINTREE_TREE_LEFT"/>
			<dependency name="E_BINTREE_TREE_PARENT"/>
			<dependency name="E_BINTREE_TREE_POINTER"/>
			<dependency name="E_BINTREE_TREE_RIGHT"/>
			<dependency name="E_BINTREE_TREE_VALUE"/>
			<param name="output">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [][2] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="upper">
			</param>
			<param name="offset">
			</param>
			<param name="parent">
			</param>
		</member>
		<member name="M:Bintree_UpdatePointers" syntax="Bintree_UpdatePointers(data[][], offset, size, mod)">
			<stacksize value="2"/>
			<dependency name="E_BINTREE_TREE_POINTER"/>
			<param name="data">
				<paraminfo>Bintree [][5] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<param name="size">
			</param>
			<param name="mod">
			</param>
		</member>
		<member name="M:Bit_Display" syntax="Bit_Display(array[], size)">
			<stacksize value="141"/>
			<dependency name="Bit_Display"/>
			<dependency name="Cell_ReverseBits"/>
			<dependency name="format"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Bit_GetCount" syntax="Bit_GetCount(array[], size)">
			<stacksize value="4"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Bit_Set" syntax="Bit_Set(array[], slot, set)">
			<stacksize value="1"/>
			<dependency name="cellbits"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="slot">
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Bit_SetAll" syntax="Bit_SetAll(array[], set, size)">
			<stacksize value="3"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Bits@YSII_Ag" syntax="Bits@YSII_Ag(data[], start, size)">
			<stacksize value="3"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="_Group_SetSome"/>
			<dependency name="cellbits"/>
			<param name="data">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Blanks@YSII_Ag" syntax="Blanks@YSII_Ag(data[], start, size)">
			<stacksize value="3"/>
			<dependency name="cellbits"/>
			<param name="data">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:CallLocalFunction" syntax="CallLocalFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="va_CallLocalFunction"/>
			<referrer name="S@@_OnScriptExit"/>
			<referrer name="S@@_OnGameModeInit"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CallRemoteFunction" syntax="CallRemoteFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="va_CallRemoteFunction"/>
			<referrer name="S@@_OnScriptInit"/>
			<referrer name="S@@_OnScriptExit"/>
			<referrer name="x@"/>
			<referrer name="y@"/>
			<referrer name="@yH_PlayerCommandText3"/>
			<referrer name="Command_Process"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_CountBits" syntax="Cell_CountBits(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_GetLowestBit" syntax="Cell_GetLowestBit(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_GetLowestComponent" syntax="Cell_GetLowestComponent(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_ReverseBits" syntax="Cell_ReverseBits(data)">
			<stacksize value="1"/>
			<referrer name="Bit_Display"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_ReverseBytes" syntax="Cell_ReverseBytes(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Cell_ReverseNibbles" syntax="Cell_ReverseNibbles(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Command_Add" syntax="Command_Add(f[], s)">
			<stacksize value="13"/>
			<automaton name="x@"/>
			<referrer name="@yH_ScriptInit3"/>
			<referrer name="Command_Add@"/>
			<dependency name="Bintree_Add"/>
			<dependency name="Bintree_FindValue"/>
			<dependency name="Command_AddHash"/>
			<dependency name="Command_AddHashPacked"/>
			<dependency name="Command_FindFastStrict"/>
			<dependency name="Command_FindSlowStrict"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="H@"/>
			<dependency name="PA_Init"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandCount"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="YSI_g_sCommandIndex"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sSearchTree"/>
			<dependency name="__InitialiseFromGroups"/>
			<dependency name="e_COMM_FLAG_COLLISION"/>
			<dependency name="e_COMM_FLAG_PROVIDER"/>
			<dependency name="e_COMM_FLAG_SORTED"/>
			<dependency name="true"/>
			<param name="f">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="s">
			</param>
		</member>
		<member name="M:Command_Add@" syntax="Command_Add@(f[], s)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="x@"/>
			<dependency name="Command_Add"/>
			<param name="f">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="s">
			</param>
		</member>
		<member name="M:Command_AddAlt" syntax="Command_AddAlt(oidx, altname[])">
			<stacksize value="12"/>
			<automaton name="x@"/>
			<referrer name="Command_AddAlt@"/>
			<referrer name="Command_AddAltNamed"/>
			<dependency name="Bintree_Add"/>
			<dependency name="Bintree_FindValue"/>
			<dependency name="Command_AddHash"/>
			<dependency name="Command_FastHash"/>
			<dependency name="Command_FindFastStrict"/>
			<dependency name="Command_FindSlowStrict"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="H@"/>
			<dependency name="PA_Init"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandCount"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="YSI_g_sCommandIndex"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sSearchTree"/>
			<dependency name="__InitialiseFromGroups"/>
			<dependency name="e_COMM_FLAG_COLLISION"/>
			<dependency name="e_COMM_FLAG_PROVIDER"/>
			<dependency name="e_COMM_FLAG_SORTED"/>
			<dependency name="true"/>
			<param name="oidx">
			</param>
			<param name="altname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_AddAlt@" syntax="Command_AddAlt@(oidx, altname[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="x@"/>
			<dependency name="Command_AddAlt"/>
			<dependency name="X@"/>
			<param name="oidx">
			</param>
			<param name="altname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_AddAltNamed" syntax="Command_AddAltNamed(function[], altname[])">
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_AddAltNamed@"/>
			<dependency name="Command_AddAlt"/>
			<dependency name="Command_Find"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="altname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_AddAltNamed@" syntax="Command_AddAltNamed@(function[], altname[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="x@"/>
			<dependency name="Command_AddAltNamed"/>
			<dependency name="X@"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="altname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_AddHash" syntax="Command_AddHash(command[], dest[], idx)">
			<stacksize value="7"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<dependency name="tolower"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:Command_AddHashPacked" syntax="Command_AddHashPacked(command[], dest[], idx)">
			<stacksize value="7"/>
			<referrer name="Command_Add"/>
			<dependency name="tolower"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:Command_Debug" syntax="Command_Debug()">
			<stacksize value="1"/>
		</member>
		<member name="M:Command_DecOPCP" syntax="Command_DecOPCP()">
			<stacksize value="4"/>
			<automaton name="x@"/>
			<referrer name="Command_DecOPCP@"/>
			<referrer name="@yH_ScriptExit3"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_OPCP_ADD"/>
		</member>
		<member name="M:Command_DecOPCP@" syntax="Command_DecOPCP@()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="x@"/>
			<dependency name="Command_DecOPCP"/>
		</member>
		<member name="M:Command_DecOPCR" syntax="Command_DecOPCR()">
			<stacksize value="4"/>
			<automaton name="x@"/>
			<referrer name="Command_DecOPCR@"/>
			<referrer name="@yH_ScriptExit3"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_OPCR_ADD"/>
		</member>
		<member name="M:Command_DecOPCR@" syntax="Command_DecOPCR@()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="x@"/>
			<dependency name="Command_DecOPCR"/>
		</member>
		<member name="M:Command_FastHash" syntax="Command_FastHash(command[])">
			<stacksize value="6"/>
			<referrer name="Command_Find"/>
			<referrer name="Command_AddAlt"/>
			<dependency name="tolower"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_Find" syntax="Command_Find(function[], provider)">
			<stacksize value="6"/>
			<referrer name="Command_TouchNamed"/>
			<referrer name="Command_GetID"/>
			<referrer name="Command_SetPlayerNamed"/>
			<referrer name="Command_GetPlayerNamed"/>
			<referrer name="Command_RemoveNamed"/>
			<referrer name="Command_AddAltNamed"/>
			<referrer name="Command_GetDisplayNamed"/>
			<dependency name="Command_FastHash"/>
			<dependency name="Command_FindFast"/>
			<dependency name="Command_FindFastStrict"/>
			<dependency name="Command_FindSlow"/>
			<dependency name="Command_FindSlowStrict"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_PROVIDER"/>
			<dependency name="e_COMM_FLAG_SORTED"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="provider">
			</param>
		</member>
		<member name="M:Command_FindFast" syntax="Command_FindFast(data[], value, provider)">
			<stacksize value="10"/>
			<referrer name="Command_Find"/>
			<referrer name="Command_Process"/>
			<dependency name="Bintree_FindValue"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sSearchTree"/>
			<dependency name="e_COMM_FLAG_COLLISION"/>
			<dependency name="e_COMM_FLAG_MULPRO"/>
			<dependency name="strcmp"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="provider">
			</param>
		</member>
		<member name="M:Command_FindFastStrict" syntax="Command_FindFastStrict(data[], value, provider)">
			<stacksize value="10"/>
			<referrer name="Command_Find"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<dependency name="Bintree_FindValue"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sSearchTree"/>
			<dependency name="e_COMM_FLAG_COLLISION"/>
			<dependency name="e_COMM_FLAG_MULPRO"/>
			<dependency name="strcmp"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="provider">
			</param>
		</member>
		<member name="M:Command_FindSlow" syntax="Command_FindSlow(funcname[], provider)">
			<stacksize value="8"/>
			<referrer name="Command_Find"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="e_COMM_FLAG_MULPRO"/>
			<dependency name="strcmp"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="provider">
			</param>
		</member>
		<member name="M:Command_FindSlowStrict" syntax="Command_FindSlowStrict(funcname[], provider)">
			<stacksize value="8"/>
			<referrer name="Command_Find"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="e_COMM_FLAG_MULPRO"/>
			<dependency name="strcmp"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="provider">
			</param>
		</member>
		<member name="M:Command_Generate" syntax="Command_Generate()">
			<stacksize value="3078"/>
			<automaton name="x@"/>
			<referrer name="Command_Generate@"/>
			<referrer name="@yH_ScriptInit3"/>
			<dependency name="Bintree_Generate"/>
			<dependency name="Command_PackHash"/>
			<dependency name="E_BINTREE_INPUT"/>
			<dependency name="E_BINTREE_INPUT_POINTER"/>
			<dependency name="E_BINTREE_INPUT_VALUE"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandCount"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sSearchTree"/>
			<dependency name="e_COMM_FLAG_COLLISION"/>
			<dependency name="e_COMM_FLAG_SORTED"/>
		</member>
		<member name="M:Command_Generate@" syntax="Command_Generate@()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="x@"/>
			<dependency name="Command_Generate"/>
		</member>
		<member name="M:Command_GetDeniedDisplay" syntax="Command_GetDeniedDisplay()">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetDeniedDisplay@"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_PERMISSION_WARN"/>
		</member>
		<member name="M:Command_GetDeniedDisplay@" syntax="Command_GetDeniedDisplay@()">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_GetDeniedDisplay"/>
			<dependency name="X@"/>
		</member>
		<member name="M:Command_GetDeniedReturn" syntax="Command_GetDeniedReturn()">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetDeniedReturn@"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_PERMISSION_RET"/>
		</member>
		<member name="M:Command_GetDeniedReturn@" syntax="Command_GetDeniedReturn@()">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_GetDeniedReturn"/>
			<dependency name="X@"/>
		</member>
		<member name="M:Command_GetDisconnectReturn" syntax="Command_GetDisconnectReturn()">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetDisconnectReturn@"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_DISCONNECT"/>
		</member>
		<member name="M:Command_GetDisconnectReturn@" syntax="Command_GetDisconnectReturn@()">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_GetDisconnectReturn"/>
			<dependency name="X@"/>
		</member>
		<member name="M:Command_GetDisplay" syntax="Command_GetDisplay(funcid, playerid)">
			<stacksize value="138"/>
			<automaton name="x@"/>
			<referrer name="Command_GetDisplay@"/>
			<dependency name="Command_GetDisplay"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="F@"/>
			<dependency name="G@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="cellbits"/>
			<dependency name="strunpack"/>
			<param name="funcid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetDisplay@" syntax="Command_GetDisplay@(funcid, playerid)">
			<attribute name="public"/>
			<stacksize value="136"/>
			<automaton name="x@"/>
			<dependency name="Command_GetDisplay"/>
			<dependency name="Command_GetDisplay"/>
			<dependency name="R@"/>
			<param name="funcid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetDisplayNamed" syntax="Command_GetDisplayNamed(func[], playerid)">
			<stacksize value="139"/>
			<automaton name="x@"/>
			<referrer name="Command_GetDisplayNamed@"/>
			<dependency name="Command_Find"/>
			<dependency name="Command_GetDisplayNamed"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="F@"/>
			<dependency name="G@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="cellbits"/>
			<dependency name="strunpack"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetDisplayNamed@" syntax="Command_GetDisplayNamed@(func[], playerid)">
			<attribute name="public"/>
			<stacksize value="136"/>
			<automaton name="x@"/>
			<dependency name="Command_GetDisplayNamed"/>
			<dependency name="Command_GetDisplayNamed"/>
			<dependency name="R@"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetID" syntax="Command_GetID(function[])">
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetID@"/>
			<dependency name="Command_Find"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_GetID@" syntax="Command_GetID@(function[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_GetID"/>
			<dependency name="X@"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_GetIllegalReturn" syntax="Command_GetIllegalReturn()">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetIllegalReturn@"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_ILLEGAL"/>
		</member>
		<member name="M:Command_GetIllegalReturn@" syntax="Command_GetIllegalReturn@()">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_GetIllegalReturn"/>
			<dependency name="X@"/>
		</member>
		<member name="M:Command_GetName" syntax="Command_GetName(funcid)">
			<stacksize value="135"/>
			<automaton name="x@"/>
			<referrer name="Command_GetName@"/>
			<dependency name="Command_GetName"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="F@"/>
			<dependency name="G@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="strunpack"/>
			<param name="funcid">
			</param>
		</member>
		<member name="M:Command_GetName@" syntax="Command_GetName@(funcid)">
			<attribute name="public"/>
			<stacksize value="135"/>
			<automaton name="x@"/>
			<dependency name="Command_GetName"/>
			<dependency name="Command_GetName"/>
			<dependency name="R@"/>
			<param name="funcid">
			</param>
		</member>
		<member name="M:Command_GetNext" syntax="Command_GetNext(index, playerid)">
			<stacksize value="138"/>
			<automaton name="x@"/>
			<referrer name="Command_GetNext@"/>
			<dependency name="Command_GetNext"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="F@"/>
			<dependency name="G@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="cellbits"/>
			<dependency name="strunpack"/>
			<param name="index">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetNext@" syntax="Command_GetNext@(index, playerid)">
			<attribute name="public"/>
			<stacksize value="136"/>
			<automaton name="x@"/>
			<dependency name="Command_GetNext"/>
			<dependency name="Command_GetNext"/>
			<dependency name="R@"/>
			<param name="index">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetPlayer" syntax="Command_GetPlayer(command, playerid)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetPlayer@"/>
			<referrer name="Command_GetPlayerNamed"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="cellbits"/>
			<dependency name="false"/>
			<param name="command">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetPlayer@" syntax="Command_GetPlayer@(command, playerid)">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="x@"/>
			<dependency name="Command_GetPlayer"/>
			<dependency name="X@"/>
			<param name="command">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetPlayerCommandCount" syntax="Command_GetPlayerCommandCount(playerid)">
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetPlayerCommandCount@"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="cellbits"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetPlayerCommandCount@" syntax="Command_GetPlayerCommandCount@(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_GetPlayerCommandCount"/>
			<dependency name="X@"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetPlayerNamed" syntax="Command_GetPlayerNamed(func[], playerid)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetPlayerNamed@"/>
			<dependency name="Command_Find"/>
			<dependency name="Command_GetPlayer"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetPlayerNamed@" syntax="Command_GetPlayerNamed@(func[], playerid)">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="x@"/>
			<dependency name="Command_GetPlayerNamed"/>
			<dependency name="X@"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetPlayerProvider" syntax="Command_GetPlayerProvider(playerid)">
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetPlayerProvider@"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sPlayerProvider"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetPlayerProvider@" syntax="Command_GetPlayerProvider@(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_GetPlayerProvider"/>
			<dependency name="X@"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Command_GetProvider" syntax="Command_GetProvider()">
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetProvider@"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_PROVIDER"/>
		</member>
		<member name="M:Command_GetProvider@" syntax="Command_GetProvider@()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_GetProvider"/>
			<dependency name="X@"/>
		</member>
		<member name="M:Command_GetUnknownReturn" syntax="Command_GetUnknownReturn()">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_GetUnknownReturn@"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_UNKNOWN"/>
		</member>
		<member name="M:Command_GetUnknownReturn@" syntax="Command_GetUnknownReturn@()">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_GetUnknownReturn"/>
			<dependency name="X@"/>
		</member>
		<member name="M:Command_Hash" syntax="Command_Hash(command[], &amp;index, &amp;length)">
			<stacksize value="5"/>
			<referrer name="Command_Process"/>
			<dependency name="tolower"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="length">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Command_IncOPCP" syntax="Command_IncOPCP()">
			<stacksize value="4"/>
			<automaton name="x@"/>
			<referrer name="Command_IncOPCP@"/>
			<referrer name="@yH_ScriptInit3"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_OPCP_ADD"/>
		</member>
		<member name="M:Command_IncOPCP@" syntax="Command_IncOPCP@()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="x@"/>
			<dependency name="Command_IncOPCP"/>
		</member>
		<member name="M:Command_IncOPCR" syntax="Command_IncOPCR()">
			<stacksize value="4"/>
			<automaton name="x@"/>
			<referrer name="Command_IncOPCR@"/>
			<referrer name="@yH_ScriptInit3"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_OPCR_ADD"/>
		</member>
		<member name="M:Command_IncOPCR@" syntax="Command_IncOPCR@()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="x@"/>
			<dependency name="Command_IncOPCR"/>
		</member>
		<member name="M:Command_PackHash" syntax="Command_PackHash(command[])">
			<stacksize value="6"/>
			<referrer name="Command_Generate"/>
			<referrer name="Command_RemoveFromBintree"/>
			<dependency name="tolower"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_Process" syntax="Command_Process(playerid, cmdtext[], help)">
			<stacksize value="13"/>
			<referrer name="@yH_PlayerCommandText3"/>
			<referrer name="Command_ReProcess"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Command_FindFast"/>
			<dependency name="Command_Hash"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="NULL"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sPlayerProvider"/>
			<dependency name="cellbits"/>
			<dependency name="e_COMM_FLAG_PERMISSION_RET"/>
			<dependency name="e_COMM_FLAG_UNKNOWN"/>
			<dependency name="getproperty"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="help">
			</param>
		</member>
		<member name="M:Command_ReProcess" syntax="Command_ReProcess(p, c[], h)">
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_ReProcess@"/>
			<dependency name="Command_Process"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<param name="p">
			</param>
			<param name="c">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="h">
			</param>
		</member>
		<member name="M:Command_ReProcess@" syntax="Command_ReProcess@(p, c[], h)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<automaton name="x@"/>
			<dependency name="Command_ReProcess"/>
			<dependency name="X@"/>
			<param name="p">
			</param>
			<param name="c">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="h">
			</param>
		</member>
		<member name="M:Command_Remove" syntax="Command_Remove(func)">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_Remove@"/>
			<referrer name="Command_RemoveNamed"/>
			<dependency name="Command_RemoveFromBintree"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandCount"/>
			<dependency name="YSI_g_sCommandIndex"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<param name="func">
			</param>
		</member>
		<member name="M:Command_Remove@" syntax="Command_Remove@(func)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_Remove"/>
			<param name="func">
			</param>
		</member>
		<member name="M:Command_RemoveFromBintree" syntax="Command_RemoveFromBintree(func)">
			<stacksize value="10"/>
			<referrer name="Master_OnScriptClose"/>
			<referrer name="Command_Remove"/>
			<dependency name="Bintree_Delete"/>
			<dependency name="Bintree_FindValue"/>
			<dependency name="Command_PackHash"/>
			<dependency name="E_BINTREE_TREE_POINTER"/>
			<dependency name="E_COMMANDS_FUNCTION"/>
			<dependency name="YSI_g_sCommandCount"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sSearchTree"/>
			<dependency name="e_COMM_FLAG_SORTED"/>
			<param name="func">
			</param>
		</member>
		<member name="M:Command_RemoveNamed" syntax="Command_RemoveNamed(func[])">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_RemoveNamed@"/>
			<dependency name="Command_Find"/>
			<dependency name="Command_Remove"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_RemoveNamed@" syntax="Command_RemoveNamed@(func[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_RemoveNamed"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetDeniedDisplay" syntax="Command_SetDeniedDisplay(set)">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_SetDeniedDisplay@"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_PERMISSION_WARN"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetDeniedDisplay@" syntax="Command_SetDeniedDisplay@(set)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_SetDeniedDisplay"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetDeniedReturn" syntax="Command_SetDeniedReturn(set)">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_SetDeniedReturn@"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_PERMISSION_RET"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetDeniedReturn@" syntax="Command_SetDeniedReturn@(set)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_SetDeniedReturn"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetDisconnectReturn" syntax="Command_SetDisconnectReturn(set)">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_SetDisconnectReturn@"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_DISCONNECT"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetDisconnectReturn@" syntax="Command_SetDisconnectReturn@(set)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_SetDisconnectReturn"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetIllegalReturn" syntax="Command_SetIllegalReturn(set)">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_SetIllegalReturn@"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_ILLEGAL"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetIllegalReturn@" syntax="Command_SetIllegalReturn@(set)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_SetIllegalReturn"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetPlayer" syntax="Command_SetPlayer(c, p, s)">
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_SetPlayer@"/>
			<referrer name="Command_SetPlayerNamed"/>
			<dependency name="E_COMMANDS_PLAYERS"/>
			<dependency name="H@"/>
			<dependency name="PA_Set"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<param name="c">
			</param>
			<param name="p">
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetPlayer@" syntax="Command_SetPlayer@(c, p, s)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<automaton name="x@"/>
			<dependency name="Command_SetPlayer"/>
			<param name="c">
			</param>
			<param name="p">
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetPlayerNamed" syntax="Command_SetPlayerNamed(f[], p, s)">
			<stacksize value="7"/>
			<automaton name="x@"/>
			<referrer name="Command_SetPlayerNamed@"/>
			<dependency name="Command_Find"/>
			<dependency name="Command_SetPlayer"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<param name="f">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="p">
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetPlayerNamed@" syntax="Command_SetPlayerNamed@(f[], p, s)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<automaton name="x@"/>
			<dependency name="Command_SetPlayerNamed"/>
			<param name="f">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="p">
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetPlayerProvider" syntax="Command_SetPlayerProvider(playerid, p)">
			<stacksize value="6"/>
			<automaton name="x@"/>
			<referrer name="Command_SetPlayerProvider@"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sPlayerProvider"/>
			<param name="playerid">
			</param>
			<param name="p">
			</param>
		</member>
		<member name="M:Command_SetPlayerProvider@" syntax="Command_SetPlayerProvider@(playerid, p)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="x@"/>
			<dependency name="Command_SetPlayerProvider"/>
			<param name="playerid">
			</param>
			<param name="p">
			</param>
		</member>
		<member name="M:Command_SetProvider" syntax="Command_SetProvider(p)">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_SetProvider@"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_MULPRO"/>
			<dependency name="e_COMM_FLAG_PROVIDER"/>
			<param name="p">
			</param>
		</member>
		<member name="M:Command_SetProvider@" syntax="Command_SetProvider@(p)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_SetProvider"/>
			<param name="p">
			</param>
		</member>
		<member name="M:Command_SetUnknownReturn" syntax="Command_SetUnknownReturn(set)">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_SetUnknownReturn@"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommandFlags"/>
			<dependency name="e_COMM_FLAG_UNKNOWN"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_SetUnknownReturn@" syntax="Command_SetUnknownReturn@(set)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_SetUnknownReturn"/>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Command_Touch" syntax="Command_Touch(command)">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_Touch@"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="__InitialiseFromGroups"/>
			<param name="command">
			</param>
		</member>
		<member name="M:Command_Touch@" syntax="Command_Touch@(command)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_Touch"/>
			<param name="command">
			</param>
		</member>
		<member name="M:Command_TouchNamed" syntax="Command_TouchNamed(command[])">
			<stacksize value="5"/>
			<automaton name="x@"/>
			<referrer name="Command_TouchNamed@"/>
			<dependency name="Command_Find"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="__InitialiseFromGroups"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Command_TouchNamed@" syntax="Command_TouchNamed@(command[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="x@"/>
			<dependency name="Command_TouchNamed"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CreatePlayerTextDraw" syntax="CreatePlayerTextDraw(playerid, x, y, text[])">
			<tagname value="PlayerText"/>
			<attribute name="native"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Debug_OnScriptInit" syntax="Debug_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetGlobal"/>
			<dependency name="AMX_HEADER_AMX_VERSION"/>
			<dependency name="AMX_HEADER_CIP"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_DEFSIZE"/>
			<dependency name="AMX_HEADER_FILE_VERSION"/>
			<dependency name="AMX_HEADER_FLAGS"/>
			<dependency name="AMX_HEADER_HEA"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_MAGIC"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_SIZE"/>
			<dependency name="AMX_HEADER_STP"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_REAL_DATA"/>
		</member>
		<member name="M:Debug_Print0" syntax="Debug_Print0(str[], ...)">
			<stacksize value="4"/>
			<automaton name="ysi_debug"/>
			<referrer name="YVers_OnScriptInit"/>
			<referrer name="Hooks_AddOne"/>
			<referrer name="Group_SetBalanced"/>
			<referrer name="_Group_Create"/>
			<dependency name="numargs"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:Debug_PrintArray" syntax="Debug_PrintArray(arr[], size)">
			<stacksize value="108"/>
			<dependency name="Debug_PrintArray"/>
			<dependency name="format"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Debug_SetState" syntax="Debug_SetState()">
			<stacksize value="1"/>
			<automaton name="ysi_debug"/>
			<referrer name="YVers_OnScriptInit"/>
			<transition target="on"/>

		</member>
		<member name="M:F@" syntax="F@()">
			<stacksize value="6"/>
			<referrer name="Group_GetName"/>
			<referrer name="Command_GetName"/>
			<referrer name="Command_GetDisplay"/>
			<referrer name="Command_GetDisplayNamed"/>
			<referrer name="Command_GetNext"/>
			<dependency name="F@"/>
			<dependency name="Q@"/>
			<dependency name="getproperty"/>
			<dependency name="strunpack"/>
		</member>
		<member name="M:G@" syntax="G@(...)">
			<stacksize value="1"/>
			<referrer name="Group_GetName"/>
			<referrer name="Command_GetName"/>
			<referrer name="Command_GetDisplay"/>
			<referrer name="Command_GetDisplayNamed"/>
			<referrer name="Command_GetNext"/>
			<dependency name="G@"/>
			<dependency name="Q@"/>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:GameTextForAll" syntax="GameTextForAll(string[], time, style)">
			<attribute name="native"/>
			<referrer name="va_GameTextForAll"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
		</member>
		<member name="M:GameTextForPlayer" syntax="GameTextForPlayer(playerid, string[], time, style)">
			<attribute name="native"/>
			<referrer name="va_GameTextForPlayer"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
		</member>
		<member name="M:GetIP" syntax="GetIP(playerid)">
			<stacksize value="21"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="strval"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerIp" syntax="GetPlayerIp(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="GetIP"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayerName" syntax="GetPlayerName(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="ReturnPlayerName"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:Group@YSII_Ag" syntax="Group@YSII_Ag(group, start)">
			<stacksize value="7"/>
			<automaton name="y@"/>
			<referrer name="Group@YSII_Ag@"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<param name="group">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:Group@YSII_Ag@" syntax="Group@YSII_Ag@(group, start)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="y@"/>
			<dependency name="Group@YSII_Ag"/>
			<dependency name="X@"/>
			<param name="group">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:Group_Create" syntax="Group_Create(name[])">
			<tagname value="Group"/>
			<stacksize value="4"/>
			<dependency name="NULL"/>
			<dependency name="_Group_Create"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Group_Destroy" syntax="Group_Destroy(group)">
			<stacksize value="6"/>
			<automaton name="y@"/>
			<referrer name="Group_Destroy@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="E_GROUP_DATA_HASH"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="GroupPlayers@YSII_Cg"/>
			<dependency name="H@"/>
			<dependency name="I@"/>
			<dependency name="Itter_ClearInternal"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="_Group_Destroy_"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<param name="group">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_Destroy@" syntax="Group_Destroy@(group)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="y@"/>
			<dependency name="Group_Destroy"/>
			<param name="group">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetColour" syntax="Group_GetColour(g)">
			<stacksize value="7"/>
			<automaton name="y@"/>
			<referrer name="Group_GetColour@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="e_GROUP_FLAGS_COLOR"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetColour@" syntax="Group_GetColour@(g)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="y@"/>
			<dependency name="Group_GetColour"/>
			<dependency name="X@"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetCount" syntax="Group_GetCount(g)">
			<stacksize value="7"/>
			<automaton name="y@"/>
			<referrer name="Group_GetCount@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="GroupPlayers@YSII_Cg"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetCount@" syntax="Group_GetCount@(g)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="y@"/>
			<dependency name="Group_GetCount"/>
			<dependency name="X@"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetGang" syntax="Group_GetGang(g)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="y@"/>
			<referrer name="Group_GetGang@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="e_GROUP_FLAGS_GANG"/>
			<dependency name="false"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetGang@" syntax="Group_GetGang@(g)">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="y@"/>
			<dependency name="Group_GetGang"/>
			<dependency name="X@"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetGlobalGroup" syntax="Group_GetGlobalGroup(el)">
			<stacksize value="7"/>
			<automaton name="y@"/>
			<referrer name="Group_GetGlobalGroup@"/>
			<dependency name="Group_GetGroup"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<param name="el">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetGlobalGroup@" syntax="Group_GetGlobalGroup@(el)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="y@"/>
			<dependency name="Group_GetGlobalGroup"/>
			<dependency name="X@"/>
			<param name="el">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetGroup" syntax="Group_GetGroup(g, el)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="y@"/>
			<referrer name="Group_GetGroup@"/>
			<referrer name="Group_GetGlobalGroup"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="cellbits"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="el">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetGroup@" syntax="Group_GetGroup@(g, el)">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="y@"/>
			<dependency name="Group_GetGroup"/>
			<dependency name="X@"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="el">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetID" syntax="Group_GetID(name[])">
			<tagname value="Group"/>
			<stacksize value="10"/>
			<automaton name="y@"/>
			<referrer name="Group_GetID@"/>
			<referrer name="_Group_Create"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="E_GROUP_DATA_HASH"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YHash"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetID@" syntax="Group_GetID@(name[])">
			<tagname value="Group"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="y@"/>
			<dependency name="Group_GetID"/>
			<dependency name="X@"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetName" syntax="Group_GetName(g)">
			<stacksize value="135"/>
			<automaton name="y@"/>
			<referrer name="Group_GetName@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="E_GROUP_DATA_NAME"/>
			<dependency name="F@"/>
			<dependency name="G@"/>
			<dependency name="Group_GetName"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="strunpack"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetName@" syntax="Group_GetName@(g)">
			<attribute name="public"/>
			<stacksize value="135"/>
			<automaton name="y@"/>
			<dependency name="Group_GetName"/>
			<dependency name="Group_GetName"/>
			<dependency name="R@"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_GetPlayer" syntax="Group_GetPlayer(g, p)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="y@"/>
			<referrer name="Group_GetPlayer@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="cellbits"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="false"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="p">
			</param>
		</member>
		<member name="M:Group_GetPlayer@" syntax="Group_GetPlayer@(g, p)">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="y@"/>
			<dependency name="Group_GetPlayer"/>
			<dependency name="X@"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="p">
			</param>
		</member>
		<member name="M:Group_IsValid" syntax="Group_IsValid(g)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<automaton name="y@"/>
			<referrer name="Group_IsValid@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_IsValid@" syntax="Group_IsValid@(g)">
			<tagname value="bool"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="y@"/>
			<dependency name="Group_IsValid"/>
			<dependency name="X@"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetBalanced" syntax="Group_SetBalanced(playerid, ...)">
			<tagname value="Group"/>
			<stacksize value="136"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Group_SetBalancedInternal"/>
			<dependency name="getarg"/>
			<dependency name="min"/>
			<dependency name="numargs"/>
			<param name="playerid">
			</param>
			<param name="...">
				<paraminfo> {Group,_} </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetBalancedInternal" syntax="Group_SetBalancedInternal(p, gs[], c)">
			<tagname value="Group"/>
			<stacksize value="8"/>
			<automaton name="y@"/>
			<referrer name="Group_SetBalancedInternal@"/>
			<referrer name="Group_SetBalanced"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="GroupPlayers@YSII_Cg"/>
			<dependency name="Group_SetPlayer"/>
			<dependency name="H@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="cellbits"/>
			<dependency name="cellmax"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="true"/>
			<param name="p">
			</param>
			<param name="gs">
				<paraminfo>Group [] </paraminfo>
			</param>
			<param name="c">
			</param>
		</member>
		<member name="M:Group_SetBalancedInternal@" syntax="Group_SetBalancedInternal@(p, gs[], c)">
			<tagname value="Group"/>
			<attribute name="public"/>
			<stacksize value="6"/>
			<automaton name="y@"/>
			<dependency name="Group_SetBalancedInternal"/>
			<dependency name="X@"/>
			<param name="p">
			</param>
			<param name="gs">
				<paraminfo>Group [] </paraminfo>
			</param>
			<param name="c">
			</param>
		</member>
		<member name="M:Group_SetColour" syntax="Group_SetColour(g, c)">
			<stacksize value="6"/>
			<automaton name="y@"/>
			<referrer name="Group_SetColour@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="e_GROUP_FLAGS_COLOR"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="c">
			</param>
		</member>
		<member name="M:Group_SetColour@" syntax="Group_SetColour@(g, c)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="y@"/>
			<dependency name="Group_SetColour"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="c">
			</param>
		</member>
		<member name="M:Group_SetGang" syntax="Group_SetGang(g, n)">
			<stacksize value="6"/>
			<automaton name="y@"/>
			<referrer name="Group_SetGang@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="e_GROUP_FLAGS_GANG"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="n">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetGang@" syntax="Group_SetGang@(g, n)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="y@"/>
			<dependency name="Group_SetGang"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="n">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetGlobalGroup" syntax="Group_SetGlobalGroup(el, s)">
			<stacksize value="6"/>
			<automaton name="y@"/>
			<referrer name="Group_SetGlobalGroup@"/>
			<dependency name="Group_SetGroup"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<param name="el">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetGlobalGroup@" syntax="Group_SetGlobalGroup@(el, s)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="y@"/>
			<dependency name="Group_SetGlobalGroup"/>
			<param name="el">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetGroup" syntax="Group_SetGroup(g, el, s)">
			<stacksize value="12"/>
			<automaton name="y@"/>
			<referrer name="Group_SetGroup@"/>
			<referrer name="Group_SetGlobalGroup"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="H@"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="_Group_SetPlayer_"/>
			<dependency name="_Group_SetSome"/>
			<dependency name="_Group_SetSome"/>
			<dependency name="cellbits"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="el">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetGroup@" syntax="Group_SetGroup@(g, el, s)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<automaton name="y@"/>
			<dependency name="Group_SetGroup"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="el">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetName" syntax="Group_SetName(g, n[])">
			<stacksize value="8"/>
			<automaton name="y@"/>
			<referrer name="Group_SetName@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="E_GROUP_DATA_HASH"/>
			<dependency name="E_GROUP_DATA_NAME"/>
			<dependency name="H@"/>
			<dependency name="W@"/>
			<dependency name="YHash"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="strpack"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="n">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetName@" syntax="Group_SetName@(g, n[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="y@"/>
			<dependency name="Group_SetName"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="n">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetPlayer" syntax="Group_SetPlayer(g, p, s)">
			<stacksize value="11"/>
			<automaton name="y@"/>
			<referrer name="Group_SetPlayer@"/>
			<referrer name="Group_SetBalancedInternal"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="H@"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_gTempGroups"/>
			<dependency name="_Group_SetPlayer_"/>
			<dependency name="_Group_SetSome"/>
			<dependency name="_Group_SetSome"/>
			<dependency name="cellbits"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="p">
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Group_SetPlayer@" syntax="Group_SetPlayer@(g, p, s)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<automaton name="y@"/>
			<dependency name="Group_SetPlayer"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="p">
			</param>
			<param name="s">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:H@" syntax="H@(...)">
			<stacksize value="1"/>
			<referrer name="Group_IsValid"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="_Group_InitPlayer"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="Group_SetBalancedInternal"/>
			<referrer name="Group_GetPlayer"/>
			<referrer name="Group_SetName"/>
			<referrer name="Group_GetID"/>
			<referrer name="Group_SetGang"/>
			<referrer name="Group_GetGang"/>
			<referrer name="Group_SetColour"/>
			<referrer name="Group_GetColour"/>
			<referrer name="Group_GetCount"/>
			<referrer name="_Group_Create"/>
			<referrer name="Group_Destroy"/>
			<referrer name="Group@YSII_Ag"/>
			<referrer name="Group_SetGroup"/>
			<referrer name="Group_SetGlobalGroup"/>
			<referrer name="Group_GetGroup"/>
			<referrer name="Group_GetGlobalGroup"/>
			<referrer name="Command_SetDeniedReturn"/>
			<referrer name="Command_SetProvider"/>
			<referrer name="Command_GetProvider"/>
			<referrer name="Command_SetPlayerProvider"/>
			<referrer name="Command_GetPlayerProvider"/>
			<referrer name="Command_GetDeniedReturn"/>
			<referrer name="Command_SetIllegalReturn"/>
			<referrer name="Command_GetIllegalReturn"/>
			<referrer name="Command_SetUnknownReturn"/>
			<referrer name="Command_GetUnknownReturn"/>
			<referrer name="Command_SetDisconnectReturn"/>
			<referrer name="Command_GetDisconnectReturn"/>
			<referrer name="Command_SetDeniedDisplay"/>
			<referrer name="Command_GetDeniedDisplay"/>
			<referrer name="Command_Generate"/>
			<referrer name="Command_IncOPCR"/>
			<referrer name="Command_DecOPCR"/>
			<referrer name="Command_IncOPCP"/>
			<referrer name="Command_DecOPCP"/>
			<referrer name="Command_TouchNamed"/>
			<referrer name="Command_Touch"/>
			<referrer name="Command_GetID"/>
			<referrer name="Command_SetPlayer"/>
			<referrer name="Command_SetPlayerNamed"/>
			<referrer name="Command_GetPlayer"/>
			<referrer name="Command_GetPlayerNamed"/>
			<referrer name="Command_Remove"/>
			<referrer name="Command_RemoveNamed"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<referrer name="Command_AddAltNamed"/>
			<referrer name="Command_ReProcess"/>
			<referrer name="Command_GetPlayerCommandCount"/>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:HTTP" syntax="HTTP(index, type, url[], data[], callback[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnScriptInit"/>
			<param name="index">
			</param>
			<param name="type">
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_AddOne" syntax="Hooks_AddOne(idx, &amp;toaddidx)">
			<stacksize value="4"/>
			<referrer name="Hooks_FindAll"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="Debug_Print0"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<param name="idx">
			</param>
			<param name="toaddidx">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_Blank_Return0" syntax="Hooks_Blank_Return0()">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
		</member>
		<member name="M:Hooks_Blank_Return1" syntax="Hooks_Blank_Return1()">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
		</member>
		<member name="M:Hooks_Blank_Return1N" syntax="Hooks_Blank_Return1N()">
			<stacksize value="1"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
		</member>
		<member name="M:Hooks_FindAll" syntax="Hooks_FindAll(name[], &amp;toaddidx, &amp;start, &amp;end)">
			<stacksize value="41"/>
			<referrer name="AMX_OnScriptInit"/>
			<dependency name="AMX_GetNamePrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="Hooks_AddOne"/>
			<dependency name="false"/>
			<dependency name="funcidx"/>
			<dependency name="strcat"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="toaddidx">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="start">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_RedirectPublic" syntax="Hooks_RedirectPublic(from[], to[], final)">
			<stacksize value="10"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_GetPointer"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="AMX_Write"/>
			<dependency name="Hooks_Blank_Return0"/>
			<dependency name="Hooks_Blank_Return1"/>
			<dependency name="Hooks_Blank_Return1N"/>
			<dependency name="strfind"/>
			<param name="from">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="to">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="final">
			</param>
		</member>
		<member name="M:Hooks_RemovePublic" syntax="Hooks_RemovePublic(from[], final)">
			<stacksize value="8"/>
			<referrer name="AMX_OnScriptInit"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="AMX_Write"/>
			<dependency name="Hooks_Blank_Return0"/>
			<dependency name="Hooks_Blank_Return1"/>
			<dependency name="Hooks_Blank_Return1N"/>
			<dependency name="strfind"/>
			<param name="from">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="final">
			</param>
		</member>
		<member name="M:IsPlayerConnected" syntax="IsPlayerConnected(playerid)">
			<attribute name="native"/>
			<referrer name="PA@YSII_Ag"/>
			<referrer name="S@@_OnFilterScriptInit"/>
			<referrer name="S@@_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerNPC" syntax="IsPlayerNPC(playerid)">
			<attribute name="native"/>
			<referrer name="S@@_OnPlayerConnect"/>
			<referrer name="S@@_OnFilterScriptInit"/>
			<referrer name="S@@_OnGameModeInit"/>
			<referrer name="Itter_OPDCInternal"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Itter_AddInternal" syntax="Itter_AddInternal(&amp;count, array[], value, size)">
			<stacksize value="3"/>
			<referrer name="S@@_OnPlayerConnect"/>
			<referrer name="_Group_SetPlayer"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_ClearInternal" syntax="Itter_ClearInternal(&amp;count, array[], size)">
			<stacksize value="3"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="Group_Destroy"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_ContainsInternal" syntax="Itter_ContainsInternal(array[], value, size)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_FreeInternal" syntax="Itter_FreeInternal(array[], size)">
			<stacksize value="2"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_InitInternal" syntax="Itter_InitInternal(arr[][], s0, s1)">
			<stacksize value="4"/>
			<referrer name="Master_OnScriptInit"/>
			<param name="arr">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="s0">
			</param>
			<param name="s1">
			</param>
		</member>
		<member name="M:Itter_OPDCInternal" syntax="Itter_OPDCInternal(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="Bot@YSII_Cg"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="Character@YSII_Cg"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Itter_RemoveInternal"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="Player@YSII_Cg"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Itter_PrevInternal" syntax="Itter_PrevInternal(array[], size, slot)">
			<stacksize value="2"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:Itter_RandomInternal" syntax="Itter_RandomInternal(count, array[], size)">
			<stacksize value="4"/>
			<dependency name="random"/>
			<param name="count">
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_RemoveInternal" syntax="Itter_RemoveInternal(&amp;count, array[], value, size)">
			<stacksize value="9"/>
			<referrer name="Itter_OPDCInternal"/>
			<referrer name="@yH_PlayerDisconnect2"/>
			<referrer name="_Group_SetPlayer"/>
			<dependency name="Itter_SafeRemoveInternal"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Itter_SafeRemoveInternal" syntax="Itter_SafeRemoveInternal(&amp;count, array[], value, &amp;last, size)">
			<stacksize value="2"/>
			<referrer name="Itter_RemoveInternal"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="last">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Master_GetNext" syntax="Master_GetNext()">
			<stacksize value="8"/>
			<dependency name="getproperty"/>
		</member>
		<member name="M:Master_OnScriptClose" syntax="Master_OnScriptClose(script)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<automaton name="x@"/>
			<dependency name="Command_RemoveFromBintree"/>
			<dependency name="E_COMMANDS_FUNC_POINTER"/>
			<dependency name="E_COMMANDS_MASTERS"/>
			<dependency name="YSI_g_sCommandCount"/>
			<dependency name="YSI_g_sCommandIndex"/>
			<dependency name="YSI_g_sCommands"/>
			<dependency name="YSI_g_sCommands"/>
			<param name="script">
			</param>
		</member>
		<member name="M:Master_OnScriptInit" syntax="Master_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="E_GROUP_DATA_HASH"/>
			<dependency name="E_GROUP_DATA_NAME"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="Itter_InitInternal"/>
			<dependency name="J@"/>
			<dependency name="YHash"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="YSI_g_sNextAddFunc"/>
			<dependency name="YSI_g_sNextInitFunc"/>
			<dependency name="YSI_g_sNextUpdFunc"/>
			<dependency name="YSI_g_scGlobalName"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_YCM_gy@"/>
			<dependency name="_Y_G@C_3"/>
			<dependency name="cellbits"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="e_GROUP_FLAGS_GLOBAL"/>
			<dependency name="strpack"/>
			<transition target="y"/>

		</member>
		<member name="M:Master_Reassert" syntax="Master_Reassert()">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="U@"/>
			<dependency name="YSI_g_sMasterCount"/>
			<dependency name="YSI_g_sMasterData"/>
			<dependency name="_@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
		</member>
		<member name="M:OnActorStreamIn" syntax="OnActorStreamIn(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnActorStreamOut" syntax="OnActorStreamOut(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnDialogResponse" syntax="OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnDialogResponse"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnEnterExitModShop" syntax="OnEnterExitModShop(playerid, enterexit, interiorid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnEnterExitModShop"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="enterexit">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:OnFilterScriptExit" syntax="OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:OnFilterScriptInit" syntax="OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<dependency name="true"/>
		</member>
		<member name="M:OnGameModeExit" syntax="OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:OnGameModeInit" syntax="OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:OnIncomingConnection" syntax="OnIncomingConnection(playerid, ip_address[], port)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="port">
			</param>
		</member>
		<member name="M:OnObjectMoved" syntax="OnObjectMoved(objectid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnObjectMoved"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerClickMap" syntax="OnPlayerClickMap(playerid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerClickMap"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickPlayer" syntax="OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerClickPlayer"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="clickedplayerid">
			</param>
			<param name="source">
			</param>
		</member>
		<member name="M:OnPlayerClickPlayerTextDraw" syntax="OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerClickPlayerTextDraw"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickTextDraw" syntax="OnPlayerClickTextDraw(playerid, clickedid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerClickTextDraw"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandPerformed" syntax="OnPlayerCommandPerformed(playerid, cmdtext[], success)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnPlayerCommandReceived" syntax="OnPlayerCommandReceived(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandText" syntax="OnPlayerCommandText(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerCommandText"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerConnect" syntax="OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerConnect"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerDeath" syntax="OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerDeath"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerDisconnect" syntax="OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerDisconnect"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerEditAttachedObject" syntax="OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEditAttachedObject"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="boneid">
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditObject" syntax="OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEditObject"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEnterArea" syntax="OnPlayerEnterArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterArea"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerEnterCheckpoint" syntax="OnPlayerEnterCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterCheckpoint"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterRaceCheckpoint" syntax="OnPlayerEnterRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterRaceCheckpoint"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterVehicle" syntax="OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerEnterVehicle"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:OnPlayerExitRace" syntax="OnPlayerExitRace(playerid, race)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerExitRace"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="race">
			</param>
		</member>
		<member name="M:OnPlayerExitVehicle" syntax="OnPlayerExitVehicle(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerExitVehicle"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnPlayerExitedMenu" syntax="OnPlayerExitedMenu(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerExitedMenu"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerFinishRace" syntax="OnPlayerFinishRace(playerid, race, position, prize, time)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerFinishRace"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="race">
			</param>
			<param name="position">
			</param>
			<param name="prize">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamage" syntax="OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerGiveDamage"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamageActor" syntax="OnPlayerGiveDamageActor(playerid, damaged_actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damaged_actorid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerInteriorChange" syntax="OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerInteriorChange"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="newinteriorid">
			</param>
			<param name="oldinteriorid">
			</param>
		</member>
		<member name="M:OnPlayerKeyStateChange" syntax="OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerKeyStateChange"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:OnPlayerLeaveArea" syntax="OnPlayerLeaveArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLeaveArea"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveCheckpoint" syntax="OnPlayerLeaveCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLeaveCheckpoint"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveRaceCheckpoint" syntax="OnPlayerLeaveRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLeaveRaceCheckpoint"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerLogin" syntax="OnPlayerLogin(playerid, uid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLogin"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="uid">
			</param>
		</member>
		<member name="M:OnPlayerLogout" syntax="OnPlayerLogout(playerid, uid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerLogout"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="uid">
			</param>
		</member>
		<member name="M:OnPlayerObjectMoved" syntax="OnPlayerObjectMoved(playerid, objectid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerObjectMoved"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpPickup" syntax="OnPlayerPickUpPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerPickUpPickup"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerRequestClass" syntax="OnPlayerRequestClass(playerid, classid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerRequestClass"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:OnPlayerRequestSpawn" syntax="OnPlayerRequestSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerRequestSpawn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerSelectObject" syntax="OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerSelectObject"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectedMenuRow" syntax="OnPlayerSelectedMenuRow(playerid, row)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerSelectedMenuRow"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="row">
			</param>
		</member>
		<member name="M:OnPlayerSpawn" syntax="OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerSpawn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerStateChange" syntax="OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerStateChange"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:OnPlayerStreamIn" syntax="OnPlayerStreamIn(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerStreamIn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerStreamOut" syntax="OnPlayerStreamOut(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerStreamOut"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerTakeDamage" syntax="OnPlayerTakeDamage(playerid, issuerid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerTakeDamage"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerText" syntax="OnPlayerText(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerText"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerUpdate" syntax="OnPlayerUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnPlayerUpdate"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerWeaponShot" syntax="OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="hittype">
			</param>
			<param name="hitid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnRaceEnd" syntax="OnRaceEnd(race)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnRaceEnd"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="race">
			</param>
		</member>
		<member name="M:OnRconCommand" syntax="OnRconCommand(cmd[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnRconCommand"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnRconLoginAttempt" syntax="OnRconLoginAttempt(ip[], password[], success)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnRconLoginAttempt"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnTrailerUpdate" syntax="OnTrailerUpdate(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnUnoccupiedVehicleUpdate" syntax="OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, new_x, new_y, new_z, vel_x, vel_y, vel_z)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnUnoccupiedVehicleUpdate"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="passenger_seat">
			</param>
			<param name="new_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnVehicleDamageStatusUpdate" syntax="OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleDamageStatusUpdate"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnVehicleDeath" syntax="OnVehicleDeath(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleDeath"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:OnVehicleMod" syntax="OnVehicleMod(playerid, vehicleid, componentid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleMod"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:OnVehiclePaintjob" syntax="OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehiclePaintjob"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:OnVehicleRespray" syntax="OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleRespray"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:OnVehicleSirenStateChange" syntax="OnVehicleSirenStateChange(playerid, vehicleid, newstate)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="newstate">
			</param>
		</member>
		<member name="M:OnVehicleSpawn" syntax="OnVehicleSpawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleSpawn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnVehicleStreamIn" syntax="OnVehicleStreamIn(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleStreamIn"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnVehicleStreamOut" syntax="OnVehicleStreamOut(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ALS_OnVehicleStreamOut"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:PA@YSII_Ag" syntax="PA@YSII_Ag(data[], start)">
			<stacksize value="6"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="cellbits"/>
			<param name="data">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:PA_Init" syntax="PA_Init(a[], init, s)">
			<stacksize value="2"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<param name="a">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="init">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="s">
			</param>
		</member>
		<member name="M:PA_Set" syntax="PA_Set(d[], slot, set)">
			<stacksize value="1"/>
			<referrer name="Command_SetPlayer"/>
			<dependency name="cellbits"/>
			<param name="d">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="slot">
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:R@" syntax="R@(buffer[])">
			<stacksize value="6"/>
			<referrer name="Group_GetName@"/>
			<referrer name="Command_GetName@"/>
			<referrer name="Command_GetDisplay@"/>
			<referrer name="Command_GetDisplayNamed@"/>
			<referrer name="Command_GetNext@"/>
			<dependency name="setproperty"/>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ReturnPlayerName" syntax="ReturnPlayerName(playerid)">
			<stacksize value="29"/>
			<dependency name="GetPlayerName"/>
			<dependency name="ReturnPlayerName"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@" syntax="S@(v)">
			<stacksize value="6"/>
			<dependency name="Q@"/>
			<dependency name="S@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<dependency name="strunpack"/>
			<param name="v">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnDialogResponse" syntax="S@@_OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnEnterExitModShop" syntax="S@@_OnEnterExitModShop(playerid, enterexit, interiorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="enterexit">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:S@@_OnFilterScriptExit" syntax="S@@_OnFilterScriptExit()">
			<stacksize value="1"/>
		</member>
		<member name="M:S@@_OnFilterScriptInit" syntax="S@@_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="Bot@YSII_Cg"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="Character@YSII_Cg"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="Player@YSII_Cg"/>
		</member>
		<member name="M:S@@_OnGameModeExit" syntax="S@@_OnGameModeExit()">
			<stacksize value="1"/>
		</member>
		<member name="M:S@@_OnGameModeInit" syntax="S@@_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="Bot@YSII_Cg"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="Character@YSII_Cg"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="Player@YSII_Cg"/>
			<dependency name="YSI_gsOnGameModeInit"/>
			<dependency name="YSI_gsSpecifier@"/>
		</member>
		<member name="M:S@@_OnObjectMoved" syntax="S@@_OnObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerClickMap" syntax="S@@_OnPlayerClickMap(playerid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerClickPlayer" syntax="S@@_OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedplayerid">
			</param>
			<param name="source">
			</param>
		</member>
		<member name="M:S@@_OnPlayerClickPlayerTextDraw" syntax="S@@_OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerClickTextDraw" syntax="S@@_OnPlayerClickTextDraw(playerid, clickedid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerCommandText" syntax="S@@_OnPlayerCommandText(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerConnect" syntax="S@@_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Bot@YSII_Ag"/>
			<dependency name="Bot@YSII_Cg"/>
			<dependency name="Character@YSII_Ag"/>
			<dependency name="Character@YSII_Cg"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Itter_AddInternal"/>
			<dependency name="Player@YSII_Ag"/>
			<dependency name="Player@YSII_Cg"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerDeath" syntax="S@@_OnPlayerDeath(playerid, killerid, reason)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:S@@_OnPlayerDisconnect" syntax="S@@_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEditAttachedObject" syntax="S@@_OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="boneid">
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerEditObject" syntax="S@@_OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterArea" syntax="S@@_OnPlayerEnterArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterCheckpoint" syntax="S@@_OnPlayerEnterCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterRaceCheckpoint" syntax="S@@_OnPlayerEnterRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerEnterVehicle" syntax="S@@_OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:S@@_OnPlayerExitRace" syntax="S@@_OnPlayerExitRace(playerid, race)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="race">
			</param>
		</member>
		<member name="M:S@@_OnPlayerExitVehicle" syntax="S@@_OnPlayerExitVehicle(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerExitedMenu" syntax="S@@_OnPlayerExitedMenu(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerFinishRace" syntax="S@@_OnPlayerFinishRace(playerid, race, position, prize, time)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="race">
			</param>
			<param name="position">
			</param>
			<param name="prize">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:S@@_OnPlayerGiveDamage" syntax="S@@_OnPlayerGiveDamage(playerid, damagedid, amount, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerInteriorChange" syntax="S@@_OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newinteriorid">
			</param>
			<param name="oldinteriorid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerKeyStateChange" syntax="S@@_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLeaveArea" syntax="S@@_OnPlayerLeaveArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLeaveCheckpoint" syntax="S@@_OnPlayerLeaveCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLeaveRaceCheckpoint" syntax="S@@_OnPlayerLeaveRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLogin" syntax="S@@_OnPlayerLogin(playerid, uid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="uid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerLogout" syntax="S@@_OnPlayerLogout(playerid, uid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="uid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerObjectMoved" syntax="S@@_OnPlayerObjectMoved(playerid, objectid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerPickUpPickup" syntax="S@@_OnPlayerPickUpPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerRequestClass" syntax="S@@_OnPlayerRequestClass(playerid, classid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerRequestSpawn" syntax="S@@_OnPlayerRequestSpawn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerSelectObject" syntax="S@@_OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerSelectedMenuRow" syntax="S@@_OnPlayerSelectedMenuRow(playerid, row)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="row">
			</param>
		</member>
		<member name="M:S@@_OnPlayerSpawn" syntax="S@@_OnPlayerSpawn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerStateChange" syntax="S@@_OnPlayerStateChange(playerid, newstate, oldstate)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:S@@_OnPlayerStreamIn" syntax="S@@_OnPlayerStreamIn(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerStreamOut" syntax="S@@_OnPlayerStreamOut(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerTakeDamage" syntax="S@@_OnPlayerTakeDamage(playerid, issuerid, amount, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:S@@_OnPlayerText" syntax="S@@_OnPlayerText(playerid, text[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnPlayerUpdate" syntax="S@@_OnPlayerUpdate(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnRaceEnd" syntax="S@@_OnRaceEnd(race)">
			<stacksize value="1"/>
			<param name="race">
			</param>
		</member>
		<member name="M:S@@_OnRconCommand" syntax="S@@_OnRconCommand(cmd[])">
			<stacksize value="1"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:S@@_OnRconLoginAttempt" syntax="S@@_OnRconLoginAttempt(ip[], password[], success)">
			<stacksize value="1"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:S@@_OnScriptExit" syntax="S@@_OnScriptExit()">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="YSI_g_sMasterCount"/>
			<dependency name="YSI_g_sMasterData"/>
			<dependency name="_@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
		</member>
		<member name="M:S@@_OnScriptInit" syntax="S@@_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="_@"/>
			<dependency name="existproperty"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
		</member>
		<member name="M:S@@_OnUnoccupiedVehicleUpdate" syntax="S@@_OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="passenger_seat">
			</param>
		</member>
		<member name="M:S@@_OnVehicleDamageStatusUpdate" syntax="S@@_OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleDeath" syntax="S@@_OnVehicleDeath(vehicleid, killerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleMod" syntax="S@@_OnVehicleMod(playerid, vehicleid, componentid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:S@@_OnVehiclePaintjob" syntax="S@@_OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleRespray" syntax="S@@_OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:S@@_OnVehicleSpawn" syntax="S@@_OnVehicleSpawn(vehicleid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleStreamIn" syntax="S@@_OnVehicleStreamIn(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:S@@_OnVehicleStreamOut" syntax="S@@_OnVehicleStreamOut(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:ScriptInit_OnFilterScriptExit" syntax="ScriptInit_OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnFilterScriptExit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:ScriptInit_OnFilterScriptInit" syntax="ScriptInit_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnFilterScriptInit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:ScriptInit_OnGameModeExit" syntax="ScriptInit_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnGameModeExit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:ScriptInit_OnGameModeInit" syntax="ScriptInit_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnGameModeInit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:ScriptInit_OnScriptExit" syntax="ScriptInit_OnScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ALS_OnScriptExit"/>
			<dependency name="YSI_g_sCallbackAddresses"/>
			<dependency name="YSI_g_sCallbackEnd"/>
			<dependency name="YSI_g_sCallbackStart"/>
		</member>
		<member name="M:ScriptInit_OnScriptInit" syntax="ScriptInit_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="HTTP"/>
			<dependency name="print"/>
		</member>
		<member name="M:SendClientMessage" syntax="SendClientMessage(playerid, color, message[])">
			<attribute name="native"/>
			<referrer name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendClientMessageToAll" syntax="SendClientMessageToAll(color, message[])">
			<attribute name="native"/>
			<referrer name="va_SendClientMessageToAll"/>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendPlayerMessageToAll" syntax="SendPlayerMessageToAll(senderid, message[])">
			<attribute name="native"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<param name="senderid">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendPlayerMessageToPlayer" syntax="SendPlayerMessageToPlayer(playerid, senderid, message[])">
			<attribute name="native"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<param name="playerid">
			</param>
			<param name="senderid">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetTimerEx" syntax="SetTimerEx(funcname[], interval, repeating, format[], ...)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="va_SetTimerEx"/>
			<referrer name="S@@_OnPlayerDisconnect"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:StripNL" syntax="StripNL(str[])">
			<stacksize value="4"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:T@" syntax="T@()">
			<stacksize value="6"/>
			<dependency name="setproperty"/>
		</member>
		<member name="M:TextDrawCreate" syntax="TextDrawCreate(x, y, text[])">
			<tagname value="Text"/>
			<attribute name="native"/>
			<referrer name="va_TextDrawCreate"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:U@" syntax="U@(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="Master_Reassert"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:V@" syntax="V@(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="Group_IsValid"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="Group_SetBalancedInternal"/>
			<referrer name="Group_GetPlayer"/>
			<referrer name="Group_GetID"/>
			<referrer name="Group_GetGang"/>
			<referrer name="Group_GetColour"/>
			<referrer name="Group_GetCount"/>
			<referrer name="_Group_Create"/>
			<referrer name="Group@YSII_Ag"/>
			<referrer name="Group_GetGroup"/>
			<referrer name="Group_GetGlobalGroup"/>
			<referrer name="Command_GetProvider"/>
			<referrer name="Command_GetPlayerProvider"/>
			<referrer name="Command_GetDeniedReturn"/>
			<referrer name="Command_GetIllegalReturn"/>
			<referrer name="Command_GetUnknownReturn"/>
			<referrer name="Command_GetDisconnectReturn"/>
			<referrer name="Command_GetDeniedDisplay"/>
			<referrer name="Command_GetID"/>
			<referrer name="Command_GetPlayer"/>
			<referrer name="Command_GetPlayerNamed"/>
			<referrer name="Command_AddAlt"/>
			<referrer name="Command_AddAltNamed"/>
			<referrer name="Command_ReProcess"/>
			<referrer name="Command_GetPlayerCommandCount"/>
			<param name="id">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:W@" syntax="W@(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="__Group_AddInternal_"/>
			<referrer name="Group_IsValid"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="_Group_InitPlayer"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="_Group_FakePlayer_"/>
			<referrer name="_Group_SetPlayer_"/>
			<referrer name="Group_SetBalancedInternal"/>
			<referrer name="Group_GetPlayer"/>
			<referrer name="Group_SetName"/>
			<referrer name="Group_GetName"/>
			<referrer name="Group_GetID"/>
			<referrer name="Group_SetGang"/>
			<referrer name="Group_GetGang"/>
			<referrer name="Group_SetColour"/>
			<referrer name="Group_GetColour"/>
			<referrer name="Group_GetCount"/>
			<referrer name="_Group_Create"/>
			<referrer name="_Group_CreateChain_"/>
			<referrer name="Group_Destroy"/>
			<referrer name="_Group_Destroy_"/>
			<referrer name="Group@YSII_Ag"/>
			<referrer name="Group_SetGroup"/>
			<referrer name="Group_SetGlobalGroup"/>
			<referrer name="Group_GetGroup"/>
			<referrer name="Group_GetGlobalGroup"/>
			<referrer name="Command_SetDeniedReturn"/>
			<referrer name="Command_SetProvider"/>
			<referrer name="Command_GetProvider"/>
			<referrer name="Command_SetPlayerProvider"/>
			<referrer name="Command_GetPlayerProvider"/>
			<referrer name="Command_GetDeniedReturn"/>
			<referrer name="Command_SetIllegalReturn"/>
			<referrer name="Command_GetIllegalReturn"/>
			<referrer name="Command_SetUnknownReturn"/>
			<referrer name="Command_GetUnknownReturn"/>
			<referrer name="Command_SetDisconnectReturn"/>
			<referrer name="Command_GetDisconnectReturn"/>
			<referrer name="Command_SetDeniedDisplay"/>
			<referrer name="Command_GetDeniedDisplay"/>
			<referrer name="Command_Generate"/>
			<referrer name="Command_IncOPCR"/>
			<referrer name="Command_DecOPCR"/>
			<referrer name="Command_IncOPCP"/>
			<referrer name="Command_DecOPCP"/>
			<referrer name="Command_TouchNamed"/>
			<referrer name="Command_Touch"/>
			<referrer name="Command_GetID"/>
			<referrer name="Command_SetPlayer"/>
			<referrer name="Command_SetPlayerNamed"/>
			<referrer name="Command_GetPlayer"/>
			<referrer name="Command_GetPlayerNamed"/>
			<referrer name="Command_Remove"/>
			<referrer name="Command_RemoveNamed"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
			<referrer name="Command_AddAltNamed"/>
			<referrer name="Command_ReProcess"/>
			<referrer name="Command_GetName"/>
			<referrer name="Command_GetDisplay"/>
			<referrer name="Command_GetDisplayNamed"/>
			<referrer name="Command_GetPlayerCommandCount"/>
			<referrer name="Command_GetNext"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:X@" syntax="X@(n)">
			<stacksize value="6"/>
			<referrer name="Group_IsValid@"/>
			<referrer name="Group_SetBalancedInternal@"/>
			<referrer name="Group_GetPlayer@"/>
			<referrer name="Group_GetID@"/>
			<referrer name="Group_GetGang@"/>
			<referrer name="Group_GetColour@"/>
			<referrer name="Group_GetCount@"/>
			<referrer name="_Group_Create@"/>
			<referrer name="Group@YSII_Ag@"/>
			<referrer name="Group_GetGroup@"/>
			<referrer name="Group_GetGlobalGroup@"/>
			<referrer name="Command_GetProvider@"/>
			<referrer name="Command_GetPlayerProvider@"/>
			<referrer name="Command_GetDeniedReturn@"/>
			<referrer name="Command_GetIllegalReturn@"/>
			<referrer name="Command_GetUnknownReturn@"/>
			<referrer name="Command_GetDisconnectReturn@"/>
			<referrer name="Command_GetDeniedDisplay@"/>
			<referrer name="Command_GetID@"/>
			<referrer name="Command_GetPlayer@"/>
			<referrer name="Command_GetPlayerNamed@"/>
			<referrer name="Command_AddAlt@"/>
			<referrer name="Command_AddAltNamed@"/>
			<referrer name="Command_ReProcess@"/>
			<referrer name="Command_GetPlayerCommandCount@"/>
			<dependency name="setproperty"/>
			<param name="n">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Y@" syntax="Y@()">
			<stacksize value="8"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="_Group_Create"/>
			<dependency name="_@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
		</member>
		<member name="M:YHash" syntax="YHash(str[], sensitive, type, len, pack)">
			<stacksize value="3"/>
			<referrer name="Master_OnScriptInit"/>
			<referrer name="Group_SetName"/>
			<referrer name="Group_GetID"/>
			<referrer name="_Group_Create"/>
			<dependency name="hash_bernstein"/>
			<dependency name="hash_fnv1"/>
			<dependency name="hash_fnv1a"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sensitive">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="type">
				<paraminfo>e_HASH_TYPE </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="pack">
			</param>
		</member>
		<member name="M:YSIM_OnMasterSystemInit" syntax="YSIM_OnMasterSystemInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_E_YCM@n"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_Master_Get"/>
			<dependency name="_YCM_gx@"/>
		</member>
		<member name="M:YVers_Callback" syntax="YVers_Callback(index, code, data[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="false"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<param name="index">
			</param>
			<param name="code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:YVers_OnScriptInit" syntax="YVers_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Debug_SetState"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:Z@" syntax="Z@(v)">
			<stacksize value="7"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="_Group_Create"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<param name="v">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:_@_y_amx_inc_@_" syntax="_@_y_amx_inc_@_()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="AMX_TraceFunc"/>
		</member>
		<member name="M:_@_y_funcinc_@_" syntax="_@_y_funcinc_@_()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="memcpy"/>
			<dependency name="printf"/>
			<dependency name="strcat"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
		</member>
		<member name="M:_Group_AddInternal" syntax="_Group_AddInternal(a, g)">
			<stacksize value="5"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="__Group_AddInternal_"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<param name="a">
			</param>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:_Group_Create" syntax="_Group_Create(name[])">
			<tagname value="Group"/>
			<stacksize value="9"/>
			<automaton name="y@"/>
			<referrer name="_Group_Create@"/>
			<referrer name="Group_Create"/>
			<dependency name="Debug_Print0"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="E_GROUP_DATA_HASH"/>
			<dependency name="E_GROUP_DATA_NAME"/>
			<dependency name="Group_GetID"/>
			<dependency name="H@"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="Y@"/>
			<dependency name="YHash"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_g_cEmptyGroups"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="YSI_g_sGroupCount"/>
			<dependency name="YSI_g_sMasterData"/>
			<dependency name="Z@"/>
			<dependency name="_@"/>
			<dependency name="_Group_CreateChain_"/>
			<dependency name="cellbits"/>
			<dependency name="e_GROUP_FLAGS_ACTIVE"/>
			<dependency name="e_GROUP_FLAGS_TEMP"/>
			<dependency name="strpack"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_Group_Create@" syntax="_Group_Create@(name[])">
			<tagname value="Group"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="y@"/>
			<dependency name="X@"/>
			<dependency name="_Group_Create"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_Group_CreateChain" syntax="_Group_CreateChain(g)">
			<stacksize value="5"/>
			<referrer name="_Group_CreateChain_"/>
			<referrer name="_Group_CreateChain@"/>
			<dependency name="J@"/>
			<dependency name="YSI_g_sNextAddFunc"/>
			<dependency name="_Y_G@C_1"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:_Group_CreateChain@" syntax="_Group_CreateChain@(g, __m)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="_@"/>
			<dependency name="_Group_CreateChain"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:_Group_CreateChain_" syntax="_Group_CreateChain_(g)">
			<stacksize value="6"/>
			<referrer name="_Group_Create"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="_Group_CreateChain"/>
			<param name="g">
				<paraminfo>Group </paraminfo>
			</param>
		</member>
		<member name="M:_Group_Destroy" syntax="_Group_Destroy(g, gp@YSII_Ag[], s)">
			<stacksize value="10"/>
			<referrer name="_Group_Destroy_"/>
			<referrer name="_Group_Destroy@"/>
			<dependency name="J@"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_gTempGroups"/>
			<dependency name="YSI_g_sNextUpdFunc"/>
			<dependency name="_Y_G@C_3"/>
			<dependency name="cellbits"/>
			<param name="g">
			</param>
			<param name="gp@YSII_Ag">
				<paraminfo> [1001] </paraminfo>
			</param>
			<param name="s">
			</param>
		</member>
		<member name="M:_Group_Destroy@" syntax="_Group_Destroy@(g, gp@YSII_Ag[], s, __m)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="_@"/>
			<dependency name="_Group_Destroy"/>
			<param name="g">
			</param>
			<param name="gp@YSII_Ag">
				<paraminfo> [1001] </paraminfo>
			</param>
			<param name="s">
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:_Group_Destroy_" syntax="_Group_Destroy_(g, gp@YSII_Ag[], s)">
			<stacksize value="8"/>
			<referrer name="_Group_TryRemove"/>
			<referrer name="Group_Destroy"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="_Group_Destroy"/>
			<param name="g">
			</param>
			<param name="gp@YSII_Ag">
				<paraminfo> [1001] </paraminfo>
			</param>
			<param name="s">
			</param>
		</member>
		<member name="M:_Group_FakePlayer" syntax="_Group_FakePlayer(p, g[], s)">
			<stacksize value="6"/>
			<referrer name="_Group_FakePlayer_"/>
			<referrer name="_Group_FakePlayer@"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="_Group_SetPlayer"/>
			<param name="p">
			</param>
			<param name="g">
				<paraminfo>Bit [4] </paraminfo>
			</param>
			<param name="s">
			</param>
		</member>
		<member name="M:_Group_FakePlayer@" syntax="_Group_FakePlayer@(p, g[], s, __m)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="_@"/>
			<dependency name="_Group_FakePlayer"/>
			<param name="p">
			</param>
			<param name="g">
				<paraminfo>Bit [4] </paraminfo>
			</param>
			<param name="s">
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:_Group_FakePlayer_" syntax="_Group_FakePlayer_(p, g[], s)">
			<stacksize value="8"/>
			<referrer name="@yH_PlayerConnect92"/>
			<referrer name="_Group_InitPlayer"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="_Group_FakePlayer"/>
			<param name="p">
			</param>
			<param name="g">
				<paraminfo>Bit [4] </paraminfo>
			</param>
			<param name="s">
			</param>
		</member>
		<member name="M:_Group_InitPlayer" syntax="_Group_InitPlayer(p, master)">
			<stacksize value="6"/>
			<automaton name="y@"/>
			<referrer name="@yH_PlayerConnect92"/>
			<referrer name="_Group_InitPlayer@"/>
			<dependency name="H@"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="_Group_FakePlayer_"/>
			<dependency name="cellbits"/>
			<param name="p">
			</param>
			<param name="master">
			</param>
		</member>
		<member name="M:_Group_InitPlayer@" syntax="_Group_InitPlayer@(p, master)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="y@"/>
			<dependency name="_Group_InitPlayer"/>
			<param name="p">
			</param>
			<param name="master">
			</param>
		</member>
		<member name="M:_Group_SetPlayer" syntax="_Group_SetPlayer(p, g[], s)">
			<stacksize value="12"/>
			<referrer name="_Group_FakePlayer"/>
			<referrer name="_Group_SetPlayer_"/>
			<referrer name="_Group_SetPlayer@"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="GroupPlayers@YSII_Cg"/>
			<dependency name="Itter_AddInternal"/>
			<dependency name="Itter_RemoveInternal"/>
			<dependency name="J@"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_g_sNextUpdFunc"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_YCM_gy@"/>
			<dependency name="_Y_G@C_3"/>
			<dependency name="cellbits"/>
			<param name="p">
			</param>
			<param name="g">
				<paraminfo>Bit [4] </paraminfo>
			</param>
			<param name="s">
			</param>
		</member>
		<member name="M:_Group_SetPlayer@" syntax="_Group_SetPlayer@(p, g[], s, __m)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="_@"/>
			<dependency name="_Group_SetPlayer"/>
			<param name="p">
			</param>
			<param name="g">
				<paraminfo>Bit [4] </paraminfo>
			</param>
			<param name="s">
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:_Group_SetPlayer_" syntax="_Group_SetPlayer_(p, g[], s)">
			<stacksize value="8"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="Group_SetGroup"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="_Group_SetPlayer"/>
			<param name="p">
			</param>
			<param name="g">
				<paraminfo>Bit [4] </paraminfo>
			</param>
			<param name="s">
			</param>
		</member>
		<member name="M:_Group_SetSome" syntax="_Group_SetSome(playerid, group)">
			<tagname value="Bit"/>
			<stacksize value="8"/>
			<referrer name="Group_SetPlayer"/>
			<referrer name="Group_SetGroup"/>
			<dependency name="Bits@YSII_Ag"/>
			<dependency name="YSI_gGroupPlayers"/>
			<dependency name="YSI_gTempGroups"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="YSI_g_sChildGroups"/>
			<dependency name="_Group_SetSome"/>
			<dependency name="cellbits"/>
			<param name="playerid">
			</param>
			<param name="group">
			</param>
		</member>
		<member name="M:_Group_TryRemove" syntax="_Group_TryRemove()">
			<stacksize value="8"/>
			<automaton name="y@"/>
			<referrer name="__YSI_SpecialExit"/>
			<referrer name="_Group_TryRemove@"/>
			<dependency name="E_GROUP_DATA_FLAGS"/>
			<dependency name="E_GROUP_DATA_HASH"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="GroupPlayers@YSII_Ag"/>
			<dependency name="GroupPlayers@YSII_Cg"/>
			<dependency name="H@"/>
			<dependency name="I@"/>
			<dependency name="Itter_ClearInternal"/>
			<dependency name="J@"/>
			<dependency name="V@"/>
			<dependency name="W@"/>
			<dependency name="Y@"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_gGroupData"/>
			<dependency name="YSI_g_sMasterData"/>
			<dependency name="Z@"/>
			<dependency name="_@"/>
			<dependency name="_Group_Destroy_"/>
		</member>
		<member name="M:_Group_TryRemove@" syntax="_Group_TryRemove@()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="y@"/>
			<dependency name="_Group_TryRemove"/>
		</member>
		<member name="M:_Groups_DefineStates_" syntax="_Groups_DefineStates_()">
			<stacksize value="1"/>
			<automaton name="YSI_has_groups"/>
		</member>
		<member name="M:_Master_Get" syntax="_Master_Get(library[], force)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="YSIM_OnMasterSystemInit"/>
			<referrer name="x@"/>
			<referrer name="x@OnScriptInit"/>
			<referrer name="y@"/>
			<dependency name="YSI_g_sMasterCount"/>
			<dependency name="YSI_g_sMasterData"/>
			<dependency name="_@"/>
			<dependency name="existproperty"/>
			<dependency name="false"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<dependency name="true"/>
			<param name="library">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="force">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:_ScriptInit_FixState" syntax="_ScriptInit_FixState()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_script_init_fix_state"/>
		</member>
		<member name="M:_Y_G@C_0" syntax="_Y_G@C_0(func)">
			<stacksize value="1"/>
			<param name="func">
			</param>
		</member>
		<member name="M:_Y_G@C_1" syntax="_Y_G@C_1(func, ...)">
			<stacksize value="1"/>
			<referrer name="_Group_CreateChain"/>
			<param name="func">
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:_Y_G@C_2" syntax="_Y_G@C_2(func, ...)">
			<stacksize value="1"/>
			<param name="func">
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:_Y_G@C_3" syntax="_Y_G@C_3(func, ...)">
			<stacksize value="1"/>
			<referrer name="__Group_AddInternal"/>
			<referrer name="Master_OnScriptInit"/>
			<referrer name="_Group_SetPlayer"/>
			<referrer name="_Group_Destroy"/>
			<param name="func">
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:__Group_AddInternal" syntax="__Group_AddInternal(a, g)">
			<stacksize value="7"/>
			<referrer name="__Group_AddInternal_"/>
			<referrer name="__Group_AddInternal@"/>
			<dependency name="J@"/>
			<dependency name="YSI_g_sNextInitFunc"/>
			<dependency name="_Y_G@C_3"/>
			<param name="a">
			</param>
			<param name="g">
			</param>
		</member>
		<member name="M:__Group_AddInternal@" syntax="__Group_AddInternal@(a, g, __m)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_@"/>
			<dependency name="__Group_AddInternal"/>
			<param name="a">
			</param>
			<param name="g">
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:__Group_AddInternal_" syntax="__Group_AddInternal_(a, g)">
			<stacksize value="7"/>
			<referrer name="_Group_AddInternal"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<dependency name="__Group_AddInternal"/>
			<param name="a">
			</param>
			<param name="g">
			</param>
		</member>
		<member name="M:__InitialiseFromGroups" syntax="__InitialiseFromGroups()">
			<stacksize value="1"/>
			<referrer name="Command_TouchNamed"/>
			<referrer name="Command_Touch"/>
			<referrer name="@yH_PlayerConnect3"/>
			<referrer name="Command_Add"/>
			<referrer name="Command_AddAlt"/>
		</member>
		<member name="M:__YSI_SpecialExit" syntax="__YSI_SpecialExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="_Group_TryRemove"/>
		</member>
		<member name="M:bernstein" syntax="bernstein(string[])">
			<stacksize value="4"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:binstr" syntax="binstr(string[])">
			<stacksize value="3"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:boolstr" syntax="boolstr(string[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="false"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:chrfind" syntax="chrfind(needle, haystack[], start)">
			<stacksize value="3"/>
			<dependency name="strlen"/>
			<param name="needle">
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:chrfindp" syntax="chrfindp(needle, haystack[], start)">
			<stacksize value="1"/>
			<param name="needle">
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:endofline" syntax="endofline(line[], pos)">
			<stacksize value="3"/>
			<dependency name="strlen"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
			</param>
		</member>
		<member name="M:existproperty" syntax="existproperty(id, name[], value)">
			<attribute name="native"/>
			<referrer name="S@@_OnScriptInit"/>
			<referrer name="_Master_Get"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:fclose" syntax="fclose(handle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ftouch"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:fexist" syntax="fexist(pattern[])">
			<attribute name="native"/>
			<referrer name="ftouch"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:float" syntax="float(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="value">
			</param>
		</member>
		<member name="M:floatadd" syntax="floatadd(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator+(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcmp" syntax="floatcmp(oper1, oper2)">
			<attribute name="native"/>
			<referrer name="operator==(Float:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,Float:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,Float:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatdiv" syntax="floatdiv(dividend, divisor)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<param name="dividend">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="divisor">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatmul" syntax="floatmul(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatsub" syntax="floatsub(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:fopen" syntax="fopen(name[], mode)">
			<tagname value="File"/>
			<attribute name="native"/>
			<referrer name="ftouch"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>filemode </paraminfo>
			</param>
		</member>
		<member name="M:format" syntax="format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Debug_PrintArray"/>
			<referrer name="va_format"/>
			<referrer name="va_return"/>
			<referrer name="Bit_Display"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:ftouch" syntax="ftouch(filename[])">
			<stacksize value="5"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="io_write"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:funcidx" syntax="funcidx(name[])">
			<attribute name="native"/>
			<referrer name="Hooks_FindAll"/>
			<referrer name="@yH_ScriptInit3"/>
			<referrer name="@yH_ScriptExit3"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:getarg" syntax="getarg(arg, index)">
			<attribute name="native"/>
			<referrer name="Group_SetBalanced"/>
			<param name="arg">
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:getproperty" syntax="getproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="Y@"/>
			<referrer name="Z@"/>
			<referrer name="S@"/>
			<referrer name="F@"/>
			<referrer name="Master_GetNext"/>
			<referrer name="S@@_OnScriptInit"/>
			<referrer name="S@@_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Get"/>
			<referrer name="x@"/>
			<referrer name="y@"/>
			<referrer name="Command_Process"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:getstring" syntax="getstring(addr)">
			<stacksize value="135"/>
			<dependency name="getstring"/>
			<dependency name="va_getstring"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:getstringarg" syntax="getstringarg(addr)">
			<stacksize value="135"/>
			<dependency name="getstringarg"/>
			<dependency name="va_getstring"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:hexstr" syntax="hexstr(string[])">
			<stacksize value="4"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ishex" syntax="ishex(str[])">
			<stacksize value="3"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:isnumeric" syntax="isnumeric(str[])">
			<stacksize value="3"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:memcpy" syntax="memcpy(dest[], source[], index, numbytes, maxlength)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="numbytes">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:memset" syntax="memset(variable[], cells, value)">
			<stacksize value="7"/>
			<dependency name="raw_memset"/>
			<param name="variable">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="cells">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:min" syntax="min(value1, value2)">
			<attribute name="native"/>
			<referrer name="Group_SetBalanced"/>
			<param name="value1">
			</param>
			<param name="value2">
			</param>
		</member>
		<member name="M:numargs" syntax="numargs()">
			<attribute name="native"/>
			<referrer name="Debug_Print0"/>
			<referrer name="Group_SetBalanced"/>
		</member>
		<member name="M:print" syntax="print(string[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnScriptInit"/>
			<referrer name="YVers_Callback"/>
			<referrer name="Debug_Print0"/>
			<referrer name="va_print"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:printf" syntax="printf(format[], ...)">
			<attribute name="native"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Debug_Print0"/>
			<referrer name="va_printf"/>
			<referrer name="AMX_OnScriptInit"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:random" syntax="random(max)">
			<attribute name="native"/>
			<referrer name="Itter_RandomInternal"/>
			<param name="max">
			</param>
		</member>
		<member name="M:raw_memset" syntax="raw_memset(address, cells, value)">
			<stacksize value="2"/>
			<referrer name="memset"/>
			<param name="address">
			</param>
			<param name="cells">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:setproperty" syntax="setproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="X@"/>
			<referrer name="Y@"/>
			<referrer name="Z@"/>
			<referrer name="T@"/>
			<referrer name="S@"/>
			<referrer name="R@"/>
			<referrer name="S@@_OnScriptInit"/>
			<referrer name="S@@_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Get"/>
			<referrer name="x@"/>
			<referrer name="y@"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strcat" syntax="strcat(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="va_getstring"/>
			<referrer name="Hooks_FindAll"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strcmp" syntax="strcmp(string1[], string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="YVers_Callback"/>
			<referrer name="boolstr"/>
			<referrer name="Hooks_FindAll"/>
			<referrer name="Command_FindFast"/>
			<referrer name="Command_FindFastStrict"/>
			<referrer name="Command_FindSlow"/>
			<referrer name="Command_FindSlowStrict"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strfind" syntax="strfind(string[], sub[], ignorecase, pos)">
			<attribute name="native"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="Hooks_RedirectPublic"/>
			<referrer name="Hooks_RemovePublic"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sub">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="pos">
			</param>
		</member>
		<member name="M:strlen" syntax="strlen(string[])">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="StripNL"/>
			<referrer name="endofline"/>
			<referrer name="chrfind"/>
			<referrer name="unpack"/>
			<referrer name="va_strlen"/>
			<referrer name="Hooks_FindAll"/>
			<referrer name="YHash"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strpack" syntax="strpack(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="Master_OnScriptInit"/>
			<referrer name="Group_SetName"/>
			<referrer name="_Group_Create"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strunpack" syntax="strunpack(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="unpack"/>
			<referrer name="S@"/>
			<referrer name="F@"/>
			<referrer name="Group_GetName"/>
			<referrer name="Command_GetName"/>
			<referrer name="Command_GetDisplay"/>
			<referrer name="Command_GetDisplayNamed"/>
			<referrer name="Command_GetNext"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strval" syntax="strval(string[])">
			<attribute name="native"/>
			<referrer name="GetIP"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:tolower" syntax="tolower(c)">
			<attribute name="native"/>
			<referrer name="Command_AddHash"/>
			<referrer name="Command_AddHashPacked"/>
			<referrer name="Command_FastHash"/>
			<referrer name="Command_PackHash"/>
			<referrer name="Command_Hash"/>
			<param name="c">
			</param>
		</member>
		<member name="M:unpack" syntax="unpack(str[])">
			<stacksize value="135"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<dependency name="unpack"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:va_CallLocalFunction" syntax="va_CallLocalFunction(function[], fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_CallRemoteFunction" syntax="va_CallRemoteFunction(function[], fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="CallRemoteFunction"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_CreatePlayerTextDraw" syntax="va_CreatePlayerTextDraw(playerid, x, y, fmat[], ...)">
			<tagname value="PlayerText"/>
			<stacksize value="1049"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="va_return"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_GameTextForAll" syntax="va_GameTextForAll(fmat[], time, style, ...)">
			<stacksize value="1046"/>
			<dependency name="GameTextForAll"/>
			<dependency name="va_return"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_GameTextForPlayer" syntax="va_GameTextForPlayer(playerid, fmat[], time, style, ...)">
			<stacksize value="1047"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="va_return"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendClientMessage" syntax="va_SendClientMessage(playerid, colour, fmat[], ...)">
			<stacksize value="1048"/>
			<dependency name="SendClientMessage"/>
			<dependency name="va_return"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendClientMessageToAll" syntax="va_SendClientMessageToAll(colour, fmat[], ...)">
			<stacksize value="1047"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="va_return"/>
			<dependency name="va_return"/>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendPlayerMessageToAll" syntax="va_SendPlayerMessageToAll(senderid, fmat[], ...)">
			<stacksize value="1047"/>
			<dependency name="SendPlayerMessageToAll"/>
			<dependency name="va_return"/>
			<dependency name="va_return"/>
			<param name="senderid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendPlayerMessageToPlayer" syntax="va_SendPlayerMessageToPlayer(playerid, senderid, fmat[], ...)">
			<stacksize value="1048"/>
			<dependency name="SendPlayerMessageToPlayer"/>
			<dependency name="va_return"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="senderid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SetTimerEx" syntax="va_SetTimerEx(function[], interval, repeating, fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="SetTimerEx"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_TextDrawCreate" syntax="va_TextDrawCreate(x, y, fmat[], ...)">
			<tagname value="Text"/>
			<stacksize value="1048"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="va_return"/>
			<dependency name="va_return"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_format" syntax="va_format(out[], size, fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="format"/>
			<param name="out">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_getstring" syntax="va_getstring(dest[], arg, len)">
			<stacksize value="1"/>
			<referrer name="getstring"/>
			<referrer name="getstringarg"/>
			<dependency name="strcat"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="arg">
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:va_print" syntax="va_print(fmat[], ...)">
			<stacksize value="1046"/>
			<dependency name="print"/>
			<dependency name="va_return"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_printf" syntax="va_printf(fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<dependency name="printf"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_return" syntax="va_return(fmat[], STATIC_ARGS)">
			<stacksize value="4"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="va_GameTextForAll"/>
			<referrer name="va_print"/>
			<dependency name="format"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_strlen" syntax="va_strlen(arg)">
			<stacksize value="1"/>
			<dependency name="strlen"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:x@" syntax="x@()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<automaton name="x@"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="_@"/>
			<dependency name="_E_YCM@n"/>
			<dependency name="_E_YCM@p"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_Master_Get"/>
			<dependency name="_YCM_gx@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<transition target="y" source="false"/>
<p/> <transition target="y"/>
 <transition target="n"/>

		</member>
		<member name="M:x@OnScriptInit" syntax="x@OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_E_YCM@n"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_Master_Get"/>
			<dependency name="_YCM_gy@"/>
		</member>
		<member name="M:y@" syntax="y@()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<automaton name="y@"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="_@"/>
			<dependency name="_E_YCM@n"/>
			<dependency name="_E_YCM@p"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_Master_Get"/>
			<dependency name="_YCM_gy@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<transition target="y" source="false"/>
<p/> <transition target="y"/>
 <transition target="n"/>

		</member>

	</members>
</doc>
